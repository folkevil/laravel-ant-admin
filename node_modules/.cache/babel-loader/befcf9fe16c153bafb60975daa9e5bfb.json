{"remainingRequest":"/Users/alone/VueProjects/gold-vue/node_modules/babel-loader/lib/index.js!/Users/alone/VueProjects/gold-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alone/VueProjects/gold-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/gold-vue/src/views/form/advancedForm/AdvancedForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alone/VueProjects/gold-vue/src/views/form/advancedForm/AdvancedForm.vue","mtime":1589979841606},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/cache-loader/dist/cjs.js","mtime":1589980412065},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/babel-loader/lib/index.js","mtime":1589980411957},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/cache-loader/dist/cjs.js","mtime":1589980412065},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/vue-loader/lib/index.js","mtime":1589980529673}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5rZXlzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL1VzZXJzL2Fsb25lL1Z1ZVByb2plY3RzL2dvbGQtdnVlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy9hbG9uZS9WdWVQcm9qZWN0cy9nb2xkLXZ1ZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBSZXBvc2l0b3J5Rm9ybSBmcm9tICcuL1JlcG9zaXRvcnlGb3JtJzsKaW1wb3J0IFRhc2tGb3JtIGZyb20gJy4vVGFza0Zvcm0nOwppbXBvcnQgRm9vdGVyVG9vbEJhciBmcm9tICdAL2NvbXBvbmVudHMvRm9vdGVyVG9vbGJhcic7CmltcG9ydCB7IGJhc2VNaXhpbiB9IGZyb20gJ0Avc3RvcmUvYXBwLW1peGluJzsKdmFyIGZpZWxkTGFiZWxzID0gewogIG5hbWU6ICfku5PlupPlkI0nLAogIHVybDogJ+S7k+W6k+Wfn+WQjScsCiAgb3duZXI6ICfku5PlupPnrqHnkIblkZgnLAogIGFwcHJvdmVyOiAn5a6h5om55Lq6JywKICBkYXRlUmFuZ2U6ICfnlJ/mlYjml6XmnJ8nLAogIHR5cGU6ICfku5PlupPnsbvlnosnLAogIG5hbWUyOiAn5Lu75Yqh5ZCNJywKICB1cmwyOiAn5Lu75Yqh5o+P6L+wJywKICBvd25lcjI6ICfmiafooYzkuronLAogIGFwcHJvdmVyMjogJ+i0o+S7u+S6uicsCiAgZGF0ZVJhbmdlMjogJ+eUn+aViOaXpeacnycsCiAgdHlwZTI6ICfku7vliqHnsbvlnosnCn07CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQWR2YW5jZWRGb3JtJywKICBtaXhpbnM6IFtiYXNlTWl4aW5dLAogIGNvbXBvbmVudHM6IHsKICAgIEZvb3RlclRvb2xCYXI6IEZvb3RlclRvb2xCYXIsCiAgICBSZXBvc2l0b3J5Rm9ybTogUmVwb3NpdG9yeUZvcm0sCiAgICBUYXNrRm9ybTogVGFza0Zvcm0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgbWVtYmVyTG9hZGluZzogZmFsc2UsCiAgICAgIC8vIHRhYmxlCiAgICAgIGNvbHVtbnM6IFt7CiAgICAgICAgdGl0bGU6ICfmiJDlkZjlp5PlkI0nLAogICAgICAgIGRhdGFJbmRleDogJ25hbWUnLAogICAgICAgIGtleTogJ25hbWUnLAogICAgICAgIHdpZHRoOiAnMjAlJywKICAgICAgICBzY29wZWRTbG90czogewogICAgICAgICAgY3VzdG9tUmVuZGVyOiAnbmFtZScKICAgICAgICB9CiAgICAgIH0sIHsKICAgICAgICB0aXRsZTogJ+W3peWPtycsCiAgICAgICAgZGF0YUluZGV4OiAnd29ya0lkJywKICAgICAgICBrZXk6ICd3b3JrSWQnLAogICAgICAgIHdpZHRoOiAnMjAlJywKICAgICAgICBzY29wZWRTbG90czogewogICAgICAgICAgY3VzdG9tUmVuZGVyOiAnd29ya0lkJwogICAgICAgIH0KICAgICAgfSwgewogICAgICAgIHRpdGxlOiAn5omA5bGe6YOo6ZeoJywKICAgICAgICBkYXRhSW5kZXg6ICdkZXBhcnRtZW50JywKICAgICAgICBrZXk6ICdkZXBhcnRtZW50JywKICAgICAgICB3aWR0aDogJzQwJScsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ2RlcGFydG1lbnQnCiAgICAgICAgfQogICAgICB9LCB7CiAgICAgICAgdGl0bGU6ICfmk43kvZwnLAogICAgICAgIGtleTogJ2FjdGlvbicsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsKICAgICAgICAgIGN1c3RvbVJlbmRlcjogJ29wZXJhdGlvbicKICAgICAgICB9CiAgICAgIH1dLAogICAgICBkYXRhOiBbewogICAgICAgIGtleTogJzEnLAogICAgICAgIG5hbWU6ICflsI/mmI4nLAogICAgICAgIHdvcmtJZDogJzAwMScsCiAgICAgICAgZWRpdGFibGU6IGZhbHNlLAogICAgICAgIGRlcGFydG1lbnQ6ICfooYzmlL/pg6gnCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICcyJywKICAgICAgICBuYW1lOiAn5p2O6I6JJywKICAgICAgICB3b3JrSWQ6ICcwMDInLAogICAgICAgIGVkaXRhYmxlOiBmYWxzZSwKICAgICAgICBkZXBhcnRtZW50OiAnSVTpg6gnCiAgICAgIH0sIHsKICAgICAgICBrZXk6ICczJywKICAgICAgICBuYW1lOiAn546L5bCP5biFJywKICAgICAgICB3b3JrSWQ6ICcwMDMnLAogICAgICAgIGVkaXRhYmxlOiBmYWxzZSwKICAgICAgICBkZXBhcnRtZW50OiAn6LSi5Yqh6YOoJwogICAgICB9XSwKICAgICAgZXJyb3JzOiBbXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGhhbmRsZVN1Ym1pdDogZnVuY3Rpb24gaGFuZGxlU3VibWl0KGUpIHsKICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgfSwKICAgIG5ld01lbWJlcjogZnVuY3Rpb24gbmV3TWVtYmVyKCkgewogICAgICB2YXIgbGVuZ3RoID0gdGhpcy5kYXRhLmxlbmd0aDsKICAgICAgdGhpcy5kYXRhLnB1c2goewogICAgICAgIGtleTogbGVuZ3RoID09PSAwID8gJzEnIDogKHBhcnNlSW50KHRoaXMuZGF0YVtsZW5ndGggLSAxXS5rZXkpICsgMSkudG9TdHJpbmcoKSwKICAgICAgICBuYW1lOiAnJywKICAgICAgICB3b3JrSWQ6ICcnLAogICAgICAgIGRlcGFydG1lbnQ6ICcnLAogICAgICAgIGVkaXRhYmxlOiB0cnVlLAogICAgICAgIGlzTmV3OiB0cnVlCiAgICAgIH0pOwogICAgfSwKICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKGtleSkgewogICAgICB2YXIgbmV3RGF0YSA9IHRoaXMuZGF0YS5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5rZXkgIT09IGtleTsKICAgICAgfSk7CiAgICAgIHRoaXMuZGF0YSA9IG5ld0RhdGE7CiAgICB9LAogICAgc2F2ZVJvdzogZnVuY3Rpb24gc2F2ZVJvdyhyZWNvcmQpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMubWVtYmVyTG9hZGluZyA9IHRydWU7CiAgICAgIHZhciBrZXkgPSByZWNvcmQua2V5LAogICAgICAgICAgbmFtZSA9IHJlY29yZC5uYW1lLAogICAgICAgICAgd29ya0lkID0gcmVjb3JkLndvcmtJZCwKICAgICAgICAgIGRlcGFydG1lbnQgPSByZWNvcmQuZGVwYXJ0bWVudDsKCiAgICAgIGlmICghbmFtZSB8fCAhd29ya0lkIHx8ICFkZXBhcnRtZW50KSB7CiAgICAgICAgdGhpcy5tZW1iZXJMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcign6K+35aGr5YaZ5a6M5pW05oiQ5ZGY5L+h5oGv44CCJyk7CiAgICAgICAgcmV0dXJuOwogICAgICB9IC8vIOaooeaLn+e9kee7nOivt+axguOAgeWNoemhvyA4MDBtcwoKCiAgICAgIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlKSB7CiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICByZXNvbHZlKHsKICAgICAgICAgICAgbG9vcDogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0sIDgwMCk7CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB0YXJnZXQgPSBfdGhpcy5kYXRhLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLmtleSA9PT0ga2V5OwogICAgICAgIH0pOwoKICAgICAgICB0YXJnZXQuZWRpdGFibGUgPSBmYWxzZTsKICAgICAgICB0YXJnZXQuaXNOZXcgPSBmYWxzZTsKICAgICAgICBfdGhpcy5tZW1iZXJMb2FkaW5nID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIHRvZ2dsZTogZnVuY3Rpb24gdG9nZ2xlKGtleSkgewogICAgICB2YXIgdGFyZ2V0ID0gdGhpcy5kYXRhLmZpbmQoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICByZXR1cm4gaXRlbS5rZXkgPT09IGtleTsKICAgICAgfSk7CiAgICAgIHRhcmdldC5fb3JpZ2luYWxEYXRhID0gX29iamVjdFNwcmVhZCh7fSwgdGFyZ2V0KTsKICAgICAgdGFyZ2V0LmVkaXRhYmxlID0gIXRhcmdldC5lZGl0YWJsZTsKICAgIH0sCiAgICBnZXRSb3dCeUtleTogZnVuY3Rpb24gZ2V0Um93QnlLZXkoa2V5LCBuZXdEYXRhKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy5kYXRhOwogICAgICByZXR1cm4gKG5ld0RhdGEgfHwgZGF0YSkuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBpdGVtLmtleSA9PT0ga2V5OwogICAgICB9KTsKICAgIH0sCiAgICBjYW5jZWw6IGZ1bmN0aW9uIGNhbmNlbChrZXkpIHsKICAgICAgdmFyIHRhcmdldCA9IHRoaXMuZGF0YS5maW5kKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgcmV0dXJuIGl0ZW0ua2V5ID09PSBrZXk7CiAgICAgIH0pOwogICAgICBPYmplY3Qua2V5cyh0YXJnZXQpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgewogICAgICAgIHRhcmdldFtrZXldID0gdGFyZ2V0Ll9vcmlnaW5hbERhdGFba2V5XTsKICAgICAgfSk7CiAgICAgIHRhcmdldC5fb3JpZ2luYWxEYXRhID0gdW5kZWZpbmVkOwogICAgfSwKICAgIGhhbmRsZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbHVlLCBrZXksIGNvbHVtbikgewogICAgICB2YXIgbmV3RGF0YSA9IF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmRhdGEpOwoKICAgICAgdmFyIHRhcmdldCA9IG5ld0RhdGEuZmluZChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgIHJldHVybiBrZXkgPT09IGl0ZW0ua2V5OwogICAgICB9KTsKCiAgICAgIGlmICh0YXJnZXQpIHsKICAgICAgICB0YXJnZXRbY29sdW1uXSA9IHZhbHVlOwogICAgICAgIHRoaXMuZGF0YSA9IG5ld0RhdGE7CiAgICAgIH0KICAgIH0sCiAgICAvLyDmnIDnu4jlhajpobXpnaLmj5DkuqQKICAgIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZSgpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgX3RoaXMkJHJlZnMgPSB0aGlzLiRyZWZzLAogICAgICAgICAgcmVwb3NpdG9yeSA9IF90aGlzJCRyZWZzLnJlcG9zaXRvcnksCiAgICAgICAgICB0YXNrID0gX3RoaXMkJHJlZnMudGFzaywKICAgICAgICAgICRub3RpZmljYXRpb24gPSB0aGlzLiRub3RpZmljYXRpb247CiAgICAgIHZhciByZXBvc2l0b3J5Rm9ybSA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICByZXBvc2l0b3J5LmZvcm0udmFsaWRhdGVGaWVsZHMoZnVuY3Rpb24gKGVyciwgdmFsdWVzKSB7CiAgICAgICAgICBpZiAoZXJyKSB7CiAgICAgICAgICAgIHJlamVjdChlcnIpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgcmVzb2x2ZSh2YWx1ZXMpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdmFyIHRhc2tGb3JtID0gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICAgIHRhc2suZm9ybS52YWxpZGF0ZUZpZWxkcyhmdW5jdGlvbiAoZXJyLCB2YWx1ZXMpIHsKICAgICAgICAgIGlmIChlcnIpIHsKICAgICAgICAgICAgcmVqZWN0KGVycik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KCiAgICAgICAgICByZXNvbHZlKHZhbHVlcyk7CiAgICAgICAgfSk7CiAgICAgIH0pOyAvLyBjbGVhbiB0aGlzLmVycm9ycwoKICAgICAgdGhpcy5lcnJvcnMgPSBbXTsKICAgICAgUHJvbWlzZS5hbGwoW3JlcG9zaXRvcnlGb3JtLCB0YXNrRm9ybV0pLnRoZW4oZnVuY3Rpb24gKHZhbHVlcykgewogICAgICAgICRub3RpZmljYXRpb25bJ2Vycm9yJ10oewogICAgICAgICAgbWVzc2FnZTogJ1JlY2VpdmVkIHZhbHVlcyBvZiBmb3JtOicsCiAgICAgICAgICBkZXNjcmlwdGlvbjogSlNPTi5zdHJpbmdpZnkodmFsdWVzKQogICAgICAgIH0pOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgdmFyIGVycm9ycyA9IE9iamVjdC5hc3NpZ24oe30sIHJlcG9zaXRvcnkuZm9ybS5nZXRGaWVsZHNFcnJvcigpLCB0YXNrLmZvcm0uZ2V0RmllbGRzRXJyb3IoKSk7CgogICAgICAgIHZhciB0bXAgPSBfb2JqZWN0U3ByZWFkKHt9LCBlcnJvcnMpOwoKICAgICAgICBfdGhpczIuZXJyb3JMaXN0KHRtcCk7CiAgICAgIH0pOwogICAgfSwKICAgIGVycm9yTGlzdDogZnVuY3Rpb24gZXJyb3JMaXN0KGVycm9ycykgewogICAgICBpZiAoIWVycm9ycyB8fCBlcnJvcnMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB0aGlzLmVycm9ycyA9IE9iamVjdC5rZXlzKGVycm9ycykuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICByZXR1cm4gZXJyb3JzW2tleV07CiAgICAgIH0pLm1hcChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGtleToga2V5LAogICAgICAgICAgbWVzc2FnZTogZXJyb3JzW2tleV1bMF0sCiAgICAgICAgICBmaWVsZExhYmVsOiBmaWVsZExhYmVsc1trZXldCiAgICAgICAgfTsKICAgICAgfSk7CiAgICB9LAogICAgc2Nyb2xsVG9GaWVsZDogZnVuY3Rpb24gc2Nyb2xsVG9GaWVsZChmaWVsZEtleSkgewogICAgICB2YXIgbGFiZWxOb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigibGFiZWxbZm9yPVwiIi5jb25jYXQoZmllbGRLZXksICJcIl0iKSk7CgogICAgICBpZiAobGFiZWxOb2RlKSB7CiAgICAgICAgbGFiZWxOb2RlLnNjcm9sbEludG9WaWV3KHRydWUpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["AdvancedForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <page-header-wrapper content=\"高级表单常见于一次性输入和提交大批量数据的场景\">\n    <a-card class=\"card\" title=\"仓库管理\" :bordered=\"false\">\n      <repository-form ref=\"repository\" :showSubmit=\"false\" />\n    </a-card>\n    <a-card class=\"card\" title=\"任务管理\" :bordered=\"false\">\n      <task-form ref=\"task\" :showSubmit=\"false\" />\n    </a-card>\n\n    <!-- table -->\n    <a-card>\n      <a-table\n        :columns=\"columns\"\n        :dataSource=\"data\"\n        :pagination=\"false\"\n        :loading=\"memberLoading\"\n      >\n        <template v-for=\"(col, i) in ['name', 'workId', 'department']\" :slot=\"col\" slot-scope=\"text, record\">\n          <a-input\n            :key=\"col\"\n            v-if=\"record.editable\"\n            style=\"margin: -5px 0\"\n            :value=\"text\"\n            :placeholder=\"columns[i].title\"\n            @change=\"e => handleChange(e.target.value, record.key, col)\"\n          />\n          <template v-else>{{ text }}</template>\n        </template>\n        <template slot=\"operation\" slot-scope=\"text, record\">\n          <template v-if=\"record.editable\">\n            <span v-if=\"record.isNew\">\n              <a @click=\"saveRow(record)\">添加</a>\n              <a-divider type=\"vertical\" />\n              <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n                <a>删除</a>\n              </a-popconfirm>\n            </span>\n            <span v-else>\n              <a @click=\"saveRow(record)\">保存</a>\n              <a-divider type=\"vertical\" />\n              <a @click=\"cancel(record.key)\">取消</a>\n            </span>\n          </template>\n          <span v-else>\n            <a @click=\"toggle(record.key)\">编辑</a>\n            <a-divider type=\"vertical\" />\n            <a-popconfirm title=\"是否要删除此行？\" @confirm=\"remove(record.key)\">\n              <a>删除</a>\n            </a-popconfirm>\n          </span>\n        </template>\n      </a-table>\n      <a-button style=\"width: 100%; margin-top: 16px; margin-bottom: 8px\" type=\"dashed\" icon=\"plus\" @click=\"newMember\">新增成员</a-button>\n    </a-card>\n\n    <!-- fixed footer toolbar -->\n    <footer-tool-bar :is-mobile=\"isMobile\" :collapsed=\"sideCollapsed\">\n      <span class=\"popover-wrapper\">\n        <a-popover title=\"表单校验信息\" overlayClassName=\"antd-pro-pages-forms-style-errorPopover\" trigger=\"click\" :getPopupContainer=\"trigger => trigger.parentNode\">\n          <template slot=\"content\">\n            <li v-for=\"item in errors\" :key=\"item.key\" @click=\"scrollToField(item.key)\" class=\"antd-pro-pages-forms-style-errorListItem\">\n              <a-icon type=\"cross-circle-o\" class=\"antd-pro-pages-forms-style-errorIcon\" />\n              <div class=\"\">{{ item.message }}</div>\n              <div class=\"antd-pro-pages-forms-style-errorField\">{{ item.fieldLabel }}</div>\n            </li>\n          </template>\n          <span class=\"antd-pro-pages-forms-style-errorIcon\" v-if=\"errors.length > 0\">\n            <a-icon type=\"exclamation-circle\" />{{ errors.length }}\n          </span>\n        </a-popover>\n      </span>\n      <a-button type=\"primary\" @click=\"validate\" :loading=\"loading\">提交</a-button>\n    </footer-tool-bar>\n  </page-header-wrapper>\n</template>\n\n<script>\nimport RepositoryForm from './RepositoryForm'\nimport TaskForm from './TaskForm'\nimport FooterToolBar from '@/components/FooterToolbar'\nimport { baseMixin } from '@/store/app-mixin'\n\nconst fieldLabels = {\n  name: '仓库名',\n  url: '仓库域名',\n  owner: '仓库管理员',\n  approver: '审批人',\n  dateRange: '生效日期',\n  type: '仓库类型',\n  name2: '任务名',\n  url2: '任务描述',\n  owner2: '执行人',\n  approver2: '责任人',\n  dateRange2: '生效日期',\n  type2: '任务类型'\n}\n\nexport default {\n  name: 'AdvancedForm',\n  mixins: [baseMixin],\n  components: {\n    FooterToolBar,\n    RepositoryForm,\n    TaskForm\n  },\n  data () {\n    return {\n      loading: false,\n      memberLoading: false,\n\n      // table\n      columns: [\n        {\n          title: '成员姓名',\n          dataIndex: 'name',\n          key: 'name',\n          width: '20%',\n          scopedSlots: { customRender: 'name' }\n        },\n        {\n          title: '工号',\n          dataIndex: 'workId',\n          key: 'workId',\n          width: '20%',\n          scopedSlots: { customRender: 'workId' }\n        },\n        {\n          title: '所属部门',\n          dataIndex: 'department',\n          key: 'department',\n          width: '40%',\n          scopedSlots: { customRender: 'department' }\n        },\n        {\n          title: '操作',\n          key: 'action',\n          scopedSlots: { customRender: 'operation' }\n        }\n      ],\n      data: [\n        {\n          key: '1',\n          name: '小明',\n          workId: '001',\n          editable: false,\n          department: '行政部'\n        },\n        {\n          key: '2',\n          name: '李莉',\n          workId: '002',\n          editable: false,\n          department: 'IT部'\n        },\n        {\n          key: '3',\n          name: '王小帅',\n          workId: '003',\n          editable: false,\n          department: '财务部'\n        }\n      ],\n\n      errors: []\n    }\n  },\n  methods: {\n    handleSubmit (e) {\n      e.preventDefault()\n    },\n    newMember () {\n      const length = this.data.length\n      this.data.push({\n        key: length === 0 ? '1' : (parseInt(this.data[length - 1].key) + 1).toString(),\n        name: '',\n        workId: '',\n        department: '',\n        editable: true,\n        isNew: true\n      })\n    },\n    remove (key) {\n      const newData = this.data.filter(item => item.key !== key)\n      this.data = newData\n    },\n    saveRow (record) {\n      this.memberLoading = true\n      const { key, name, workId, department } = record\n      if (!name || !workId || !department) {\n        this.memberLoading = false\n        this.$message.error('请填写完整成员信息。')\n        return\n      }\n      // 模拟网络请求、卡顿 800ms\n      new Promise((resolve) => {\n        setTimeout(() => {\n          resolve({ loop: false })\n        }, 800)\n      }).then(() => {\n        const target = this.data.find(item => item.key === key)\n        target.editable = false\n        target.isNew = false\n        this.memberLoading = false\n      })\n    },\n    toggle (key) {\n      const target = this.data.find(item => item.key === key)\n      target._originalData = { ...target }\n      target.editable = !target.editable\n    },\n    getRowByKey (key, newData) {\n      const data = this.data\n      return (newData || data).find(item => item.key === key)\n    },\n    cancel (key) {\n      const target = this.data.find(item => item.key === key)\n      Object.keys(target).forEach(key => { target[key] = target._originalData[key] })\n      target._originalData = undefined\n    },\n    handleChange (value, key, column) {\n      const newData = [...this.data]\n      const target = newData.find(item => key === item.key)\n      if (target) {\n        target[column] = value\n        this.data = newData\n      }\n    },\n\n    // 最终全页面提交\n    validate () {\n      const { $refs: { repository, task }, $notification } = this\n      const repositoryForm = new Promise((resolve, reject) => {\n        repository.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n      const taskForm = new Promise((resolve, reject) => {\n        task.form.validateFields((err, values) => {\n          if (err) {\n            reject(err)\n            return\n          }\n          resolve(values)\n        })\n      })\n\n      // clean this.errors\n      this.errors = []\n      Promise.all([repositoryForm, taskForm]).then(values => {\n        $notification['error']({\n          message: 'Received values of form:',\n          description: JSON.stringify(values)\n        })\n      }).catch(() => {\n        const errors = Object.assign({}, repository.form.getFieldsError(), task.form.getFieldsError())\n        const tmp = { ...errors }\n        this.errorList(tmp)\n      })\n    },\n    errorList (errors) {\n      if (!errors || errors.length === 0) {\n        return\n      }\n      this.errors = Object.keys(errors)\n        .filter(key => errors[key])\n        .map(key => ({\n          key: key,\n          message: errors[key][0],\n          fieldLabel: fieldLabels[key]\n        }))\n    },\n    scrollToField (fieldKey) {\n      const labelNode = document.querySelector(`label[for=\"${fieldKey}\"]`)\n      if (labelNode) {\n        labelNode.scrollIntoView(true)\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n  .card{\n    margin-bottom: 24px;\n  }\n  .popover-wrapper {\n    /deep/ .antd-pro-pages-forms-style-errorPopover .ant-popover-inner-content {\n      min-width: 256px;\n      max-height: 290px;\n      padding: 0;\n      overflow: auto;\n    }\n  }\n  .antd-pro-pages-forms-style-errorIcon {\n    user-select: none;\n    margin-right: 24px;\n    color: #f5222d;\n    cursor: pointer;\n    i {\n          margin-right: 4px;\n    }\n  }\n  .antd-pro-pages-forms-style-errorListItem {\n    padding: 8px 16px;\n    list-style: none;\n    border-bottom: 1px solid #e8e8e8;\n    cursor: pointer;\n    transition: all .3s;\n\n    &:hover {\n      background: #e6f7ff;\n    }\n    .antd-pro-pages-forms-style-errorIcon {\n      float: left;\n      margin-top: 4px;\n      margin-right: 12px;\n      padding-bottom: 22px;\n      color: #f5222d;\n    }\n    .antd-pro-pages-forms-style-errorField {\n      margin-top: 2px;\n      color: rgba(0,0,0,.45);\n      font-size: 12px;\n    }\n  }\n</style>\n"],"sourceRoot":"src/views/form/advancedForm"}]}