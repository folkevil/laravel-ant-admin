{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js!/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/one-piece-vue/src/views/permission/role/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/views/permission/role/Index.vue","mtime":1597476828449},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js","mtime":1595422850086},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js","mtime":1596109940102}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <page-header-wrapper>\n        <a-card :body-style=\"{ padding: 0 }\">\n            <div class=\"table-operator-right\">\n                <a-button v-action:addRole type=\"primary\" icon=\"plus\" @click=\"onAddRole\">新建</a-button>\n                <a-divider type=\"vertical\"/>\n                <span class=\"ant-pro-table-toolbar-item-icon\">\n                    <a-tooltip placement=\"top\">\n                    <template slot=\"title\">\n                        <span>刷新</span>\n                    </template>\n                    <a-icon type=\"reload\" @click=\"refreshTable()\"/>\n                    </a-tooltip>\n                </span>\n            </div>\n            <s-table\n                ref=\"table\"\n                size=\"default\"\n                :rowKey=\"(record) => record.id\"\n                :columns=\"columns\"\n                :data=\"loadData\"\n                :expandRowByClick=\"true\"\n                :showPagination=\"false\"\n                :expandIcon=\"expandIcon\"\n            >\n\n            <p slot=\"expandedRowRender\" slot-scope=\"row\">\n                <a-row>\n                    <a-col class=\"rule-list\" span=\"12\" v-for=\"(item, index) in rules\" :key=\"index\">\n                    <a-row>\n                        <a-col span=\"4\">{{ item.title }}：</a-col>\n                        <a-col span=\"20\">\n                        <template v-if=\"!item.actions.length\">-</template>\n                        <template v-for=\"(action, i) in item.actions\">\n                            <a-tag color=\"blue\" :key=\"i\" v-if=\"row.permissions.indexOf(action.id) !== -1\">\n                                {{ action.title }}\n                            </a-tag>\n                            <a-tag :key=\"i\" v-else>\n                                {{ action.title }}\n                            </a-tag>\n                        </template>\n                        </a-col>\n                    </a-row>\n                    </a-col>\n                </a-row>\n            </p>\n\n            <template slot=\"status\" slot-scope=\"row\">\n                <a-badge :status=\"row.status | statusTypeFilter\" :text=\"row.status | statusFilter\" />\n            </template>\n\n            <template slot=\"fulltitle\" slot-scope=\"row\">\n                <span v-html=\"row.title\"></span>\n            </template>\n\n            <template slot=\"tools\" slot-scope=\"row\">\n                <a v-action:editRole @click=\"showRoleModal(row)\">编辑</a>\n                <a-divider type=\"vertical\" />\n                <a v-action:deleteRole @click=\"handleRoleDeleteConfirm(row.id)\">删除</a>\n            </template>\n      </s-table>\n    </a-card>\n\n    <RoleForm\n        ref=\"roleForm\"\n        :title=\"roleFormTitle\"\n        :rules=\"rules\"\n        :visible=\"roleVisible\"\n        :confirmLoading=\"confirmLoading\"\n        @changeRole=\"filterRuleAction\"\n        @checkAllActionChange=\"onCheckAllActionChange\"\n        @changeAction=\"onChangeAction\"\n        @changeAll=\"onChangeAll\"\n        @submit=\"handleRoleSubmit\"\n        @cancel=\"handleRoleCancel\"\n    />\n\n  </page-header-wrapper>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport RoleForm from './components/RoleForm'\nimport { fetchRole, addRole, updateRole, deleteRole } from '@/api/role'\nconst statusMap = {\n    0: {\n        status: 'default',\n        text: '已禁用'\n    },\n    1: {\n        status: 'processing',\n        text: '使用中'\n    }\n}\n\nconst columns = [{\n        title: '唯一识别码',\n        dataIndex: 'name'\n    },\n    {\n        title: '角色名称',\n        scopedSlots: { customRender: 'fulltitle' }\n    },\n    {\n        title: '角色状态',\n        scopedSlots: { customRender: 'status' }\n    },\n    {\n        title: '创建时间',\n        dataIndex: 'created_at'\n    },\n    {\n        title: '操作',\n        scopedSlots: { customRender: 'tools' }\n    }\n]\nexport default {\n    data() {\n        return {\n            confirmLoading: false,\n            info: {},\n            rules: [],\n            roleVisible: false,\n            roles: [],\n            dataAccessVisable: false,\n            dataAccessDefaultExpandedKeys: [],\n            selectedId: 0,\n            roleTree: [],\n            queryParam: {},\n            roleFormTitle: '角色表单',\n            loadData: parameter => {\n                return fetchRole().then(res => {\n                    const { roles, rules } = res.data\n                    this.roles = roles\n                    this.rules = rules\n                    this.rulesSelectedInit(rules)\n\n                    return {\n                        data: roles\n                    }\n                })\n            },\n            selectedRows: [],\n            allActionIds: [],\n            columns\n        }\n    },\n    components: { STable, RoleForm },\n    watch: {},\n    filters: {\n        statusFilter(type) {\n            return statusMap[type].text\n        },\n        statusTypeFilter(type) {\n            return statusMap[type].status\n        }\n    },\n    methods: {\n        onAddRole() {\n            this.roleFormTitle = '新建'\n            this.roleVisible = true\n            this.filterRuleAction()\n            this.$nextTick(() => {\n                this.$refs.roleForm.form.setFieldsValue()\n            })\n        },\n        showRoleModal(row) {\n            this.roleVisible = true\n            this.selectedId = row.id\n            this.info = row\n            this.roleFormTitle = '编辑'\n\n            this.filterRuleAction()\n\n            this.$nextTick(() => {\n                this.$refs.roleForm.form.setFieldsValue({\n                    name: row.name,\n                    title: row.title,\n                    status: row.status\n                })\n            })\n        },\n        handleRoleCancel() {\n            this.roleVisible = false\n            this.$refs.roleForm.form.resetFields()\n            this.selectedId = 0\n            this.rules.map(rule => {\n                rule.selected = []\n                rule.indeterminate = false\n                rule.checkedAll = false\n                rule.disabled = false\n                rule.actions.map(action => {\n                    action.disabled = false\n                })\n            })\n        },\n        handleRoleSubmit() {\n            this.$refs.roleForm.form.validateFields((err, values) => {\n                if (!err) {\n                    const checkedList = []\n                    const { selectedId, rules } = this\n                    rules.map(item => {\n                        item.selected.map(s => {\n                            checkedList.push(s)\n                        })\n                    })\n                    values.rules = checkedList\n                    const promise = selectedId === 0 ? addRole(values) : updateRole(selectedId, values)\n                    this.confirmLoading = true\n                    const hide = this.$message.loading('执行中..', 0)\n                    promise.then(res => {\n                        this.$message.success(this.selectedId === 0 ? '添加成功！' : '更新成功！')\n                        this.handleRoleCancel()\n                        this.refreshTable()\n                    }).finally(() => {\n                        hide()\n                        this.confirmLoading = false\n                    })\n                }\n            })\n        },\n        handleRoleDeleteConfirm(id) {\n            this.$confirm({\n                title: '确定删除此角色吗?',\n                content: '',\n                okText: '确定',\n                okType: 'danger',\n                cancelText: '取消',\n                onOk: () => {\n                    const hide = this.$message.loading('删除中..', 0)\n                    deleteRole(id).then(res => {\n                        this.$message.success('删除成功！')\n                        this.refreshTable()\n                    }).finally(r => {\n                        hide()\n                    })\n                }\n            })\n        },\n\n        expandedDept(depts) {\n            const expandedKeys = []\n            depts.map(dept => {\n                expandedKeys.push(dept.value)\n                if (dept.children !== undefined) {\n                    expandedKeys.push(...this.expandedDept(dept.children))\n                }\n            })\n\n            return expandedKeys\n        },\n\n        onChangeAction(permission) {\n            let notDisabledLen = 0\n            permission.actions.map(action => {\n                if (action.disabled === false) {\n                    notDisabledLen = notDisabledLen + 1\n                }\n            })\n            permission.indeterminate = !!permission.selected.length && (permission.selected.length < notDisabledLen)\n            permission.checkedAll = permission.selected.length === notDisabledLen\n            this.rules = [...this.rules]\n        },\n\n        onCheckAllActionChange(e, permission) {\n            console.log(e)\n            // 记录有权限的操作\n            const hasPermissionAction = []\n            permission.actions.map(action => {\n                if (action.disabled === false) {\n                    hasPermissionAction.push(action.id)\n                }\n            })\n            Object.assign(permission, {\n                selected: e.target.checked ? hasPermissionAction : [],\n                indeterminate: false,\n                checkedAll: e.target.checked\n            })\n            this.rules = [...this.rules]\n        },\n        onChangeAll() {\n\n        },\n        refreshTable() {\n            this.$refs.table.refresh()\n        },\n        filterRuleAction() {\n            const { rules } = this\n            let allPermissionActionsIds = []\n            allPermissionActionsIds = this.allActionIds\n            // 更新时 自动勾选已选择的权限\n            if (this.selectedId > 0) {\n                const { info: { permissions } } = this\n                rules.map(rule => {\n                    rule.selected = []\n                    // 记录当前菜单可选操作数量\n                    let ruleSelectCount = 0\n\n                    rule.actions.map(action => {\n                        if (permissions.indexOf(action.id) !== -1) {\n                            rule.selected.push(action.id)\n                        }\n                        action.disabled = allPermissionActionsIds.indexOf(action.id) === -1\n                        if (action.disabled === false) {\n                            ruleSelectCount = ruleSelectCount + 1\n                        }\n                    })\n\n                    rule.indeterminate = !!rule.selected.length && (rule.selected.length < ruleSelectCount)\n                    if (rule.selected.length) {\n                        rule.checkedAll = rule.selected.length === ruleSelectCount\n                    }\n                })\n            } else {\n                // 创建时\n                rules.map(rule => {\n                    rule.actions.map(action => {\n                        action.disabled = allPermissionActionsIds.indexOf(action.id) === -1\n                    })\n                })\n            }\n            this.rules = [...rules]\n        },\n        rulesSelectedInit(rules) {\n            const allActionIds = []\n            this.rules = rules.map(item => {\n                Object.assign(item, {\n                    selected: [],\n                    indeterminate: false,\n                    checkedAll: false,\n                    disabled: false\n                })\n                // 初始化状态\n                if (item.actions.length > 0) {\n                    item.actions.map(action => {\n                        allActionIds.push(action.id)\n                        action.disabled = false\n                    })\n                }\n                return item\n            })\n            this.allActionIds = allActionIds\n        },\n        expandIcon({ expanded }) {\n            if (expanded === true) {\n                return <a-icon type = 'down' />\n            }\n            return <a-icon type = 'right' />\n        }\n    }\n}\n</script>\n"],"sourceRoot":"src/views/permission/role"}]}