{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/thread-loader/dist/cjs.js!/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js!/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/alone/VueProjects/one-piece-vue/src/config/router.config.js","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/config/router.config.js","mtime":1596200449988},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/thread-loader/dist/cjs.js","mtime":1595422850490},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js","mtime":1595422850086},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js","mtime":1595422972371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}