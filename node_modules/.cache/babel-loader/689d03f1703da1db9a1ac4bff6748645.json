{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js!/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/alone/VueProjects/one-piece-vue/src/permission.js","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/permission.js","mtime":1596113210435},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js","mtime":1595422850086},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js","mtime":1595422972371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Fsb25lL1Z1ZVByb2plY3RzL29uZS1waWVjZS12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgc3RvcmFnZSBmcm9tICdzdG9yZSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ0AvY29tcG9uZW50cy9OUHJvZ3Jlc3MvbnByb2dyZXNzLmxlc3MnOyAvLyBwcm9ncmVzcyBiYXIgY3VzdG9tIHN0eWxlCgppbXBvcnQgbm90aWZpY2F0aW9uIGZyb20gJ2FudC1kZXNpZ24tdnVlL2VzL25vdGlmaWNhdGlvbic7CmltcG9ydCB7IEFDQ0VTU19UT0tFTiB9IGZyb20gJ0Avc3RvcmUvbXV0YXRpb24tdHlwZXMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIE5Qcm9ncmVzcyBDb25maWd1cmF0aW9uCgp2YXIgd2hpdGVMaXN0ID0gWydsb2dpbicsICdyZWdpc3RlcicsICdyZWdpc3RlclJlc3VsdCddOyAvLyBubyByZWRpcmVjdCB3aGl0ZWxpc3QKCnZhciBsb2dpblJvdXRlUGF0aCA9ICcvdXNlci9sb2dpbic7CnZhciBkZWZhdWx0Um91dGVQYXRoID0gJy9kYXNoYm9hcmQvd29ya3BsYWNlJzsKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHRvLCBmcm9tLCBuZXh0KSB7CiAgTlByb2dyZXNzLnN0YXJ0KCk7IC8vIHN0YXJ0IHByb2dyZXNzIGJhcgoKICAvKiBoYXMgdG9rZW4gKi8KCiAgaWYgKHN0b3JhZ2UuZ2V0KEFDQ0VTU19UT0tFTikpIHsKICAgIGlmICh0by5wYXRoID09PSBsb2dpblJvdXRlUGF0aCkgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiBkZWZhdWx0Um91dGVQYXRoCiAgICAgIH0pOwogICAgICBOUHJvZ3Jlc3MuZG9uZSgpOwogICAgfSBlbHNlIHsKICAgICAgLy8gY2hlY2sgbG9naW4gdXNlci5yb2xlcyBpcyBudWxsCiAgICAgIGlmIChzdG9yZS5nZXR0ZXJzLnJvbGVzLmxlbmd0aCA9PT0gMCkgewogICAgICAgIC8vIHJlcXVlc3QgbG9naW4gdXNlckluZm8KICAgICAgICBzdG9yZS5kaXNwYXRjaCgnR2V0SW5mbycpLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgICAgICAgdmFyIHJvbGVzID0gcmVzLnJlc3VsdCAmJiByZXMucmVzdWx0LnJvbGU7IC8vIGdlbmVyYXRlIGR5bmFtaWMgcm91dGVyCgogICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ0dlbmVyYXRlUm91dGVzJywgewogICAgICAgICAgICByb2xlczogcm9sZXMKICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyDmoLnmja5yb2xlc+adg+mZkOeUn+aIkOWPr+iuv+mXrueahOi3r+eUseihqAogICAgICAgICAgICAvLyDliqjmgIHmt7vliqDlj6/orr/pl67ot6/nlLHooagKICAgICAgICAgICAgcm91dGVyLmFkZFJvdXRlcyhzdG9yZS5nZXR0ZXJzLmFkZFJvdXRlcnMpOyAvLyDor7fmsYLluKbmnIkgcmVkaXJlY3Qg6YeN5a6a5ZCR5pe277yM55m75b2V6Ieq5Yqo6YeN5a6a5ZCR5Yiw6K+l5Zyw5Z2ACgogICAgICAgICAgICB2YXIgcmVkaXJlY3QgPSBkZWNvZGVVUklDb21wb25lbnQoZnJvbS5xdWVyeS5yZWRpcmVjdCB8fCB0by5wYXRoKTsKCiAgICAgICAgICAgIGlmICh0by5wYXRoID09PSByZWRpcmVjdCkgewogICAgICAgICAgICAgIC8vIHNldCB0aGUgcmVwbGFjZTogdHJ1ZSBzbyB0aGUgbmF2aWdhdGlvbiB3aWxsIG5vdCBsZWF2ZSBhIGhpc3RvcnkgcmVjb3JkCiAgICAgICAgICAgICAgbmV4dChfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRvKSwge30sIHsKICAgICAgICAgICAgICAgIHJlcGxhY2U6IHRydWUKICAgICAgICAgICAgICB9KSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy8g6Lez6L2s5Yiw55uu55qE6Lev55SxCiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBwYXRoOiByZWRpcmVjdAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBub3RpZmljYXRpb24uZXJyb3IoewogICAgICAgICAgICBtZXNzYWdlOiAn6ZSZ6K+vJywKICAgICAgICAgICAgZGVzY3JpcHRpb246ICfor7fmsYLnlKjmiLfkv6Hmga/lpLHotKXvvIzor7fph43or5UnCiAgICAgICAgICB9KTsgLy8g5aSx6LSl5pe277yM6I635Y+W55So5oi35L+h5oGv5aSx6LSl5pe277yM6LCD55So55m75Ye677yM5p2l5riF56m65Y6G5Y+y5L+d55WZ5L+h5oGvCgogICAgICAgICAgc3RvcmUuZGlzcGF0Y2goJ0xvZ291dCcpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICBuZXh0KHsKICAgICAgICAgICAgICBwYXRoOiBsb2dpblJvdXRlUGF0aCwKICAgICAgICAgICAgICBxdWVyeTogewogICAgICAgICAgICAgICAgcmVkaXJlY3Q6IHRvLmZ1bGxQYXRoCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIG5leHQoKTsKICAgICAgfQogICAgfQogIH0gZWxzZSB7CiAgICBpZiAod2hpdGVMaXN0LmluY2x1ZGVzKHRvLm5hbWUpKSB7CiAgICAgIC8vIOWcqOWFjeeZu+W9leeZveWQjeWNle+8jOebtOaOpei/m+WFpQogICAgICBuZXh0KCk7CiAgICB9IGVsc2UgewogICAgICBuZXh0KHsKICAgICAgICBwYXRoOiBsb2dpblJvdXRlUGF0aCwKICAgICAgICBxdWVyeTogewogICAgICAgICAgcmVkaXJlY3Q6IHRvLmZ1bGxQYXRoCiAgICAgICAgfQogICAgICB9KTsKICAgICAgTlByb2dyZXNzLmRvbmUoKTsgLy8gaWYgY3VycmVudCBwYWdlIGlzIGxvZ2luIHdpbGwgbm90IHRyaWdnZXIgYWZ0ZXJFYWNoIGhvb2ssIHNvIG1hbnVhbGx5IGhhbmRsZSBpdAogICAgfQogIH0KfSk7CnJvdXRlci5hZnRlckVhY2goZnVuY3Rpb24gKCkgewogIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGZpbmlzaCBwcm9ncmVzcyBiYXIKfSk7"},{"version":3,"sources":["/Users/alone/VueProjects/one-piece-vue/src/permission.js"],"names":["router","store","storage","NProgress","notification","ACCESS_TOKEN","configure","showSpinner","whiteList","loginRoutePath","defaultRoutePath","beforeEach","to","from","next","start","get","path","done","getters","roles","length","dispatch","then","res","result","role","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","error","message","description","fullPath","includes","name","afterEach"],"mappings":"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","sourcesContent":["import router from './router'\nimport store from './store'\nimport storage from 'store'\nimport NProgress from 'nprogress' // progress bar\nimport '@/components/NProgress/nprogress.less' // progress bar custom style\nimport notification from 'ant-design-vue/es/notification'\nimport {\n    ACCESS_TOKEN\n} from '@/store/mutation-types'\n\nNProgress.configure({\n    showSpinner: false\n}) // NProgress Configuration\n\nconst whiteList = ['login', 'register', 'registerResult'] // no redirect whitelist\nconst loginRoutePath = '/user/login'\nconst defaultRoutePath = '/dashboard/workplace'\n\nrouter.beforeEach((to, from, next) => {\n    NProgress.start() // start progress bar\n    /* has token */\n    if (storage.get(ACCESS_TOKEN)) {\n        if (to.path === loginRoutePath) {\n            next({\n                path: defaultRoutePath\n            })\n            NProgress.done()\n        } else {\n            // check login user.roles is null\n            if (store.getters.roles.length === 0) {\n                // request login userInfo\n                store\n                    .dispatch('GetInfo')\n                    .then(res => {\n                        const roles = res.result && res.result.role\n                        // generate dynamic router\n                        store.dispatch('GenerateRoutes', {\n                            roles\n                        }).then(() => {\n                            // 根据roles权限生成可访问的路由表\n                            // 动态添加可访问路由表\n                            router.addRoutes(store.getters.addRouters)\n                            // 请求带有 redirect 重定向时，登录自动重定向到该地址\n                            const redirect = decodeURIComponent(from.query.redirect || to.path)\n                            if (to.path === redirect) {\n                                // set the replace: true so the navigation will not leave a history record\n                                next({\n                                    ...to,\n                                    replace: true\n                                })\n                            } else {\n                                // 跳转到目的路由\n                                next({\n                                    path: redirect\n                                })\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        notification.error({\n                            message: '错误',\n                            description: '请求用户信息失败，请重试'\n                        })\n                        // 失败时，获取用户信息失败时，调用登出，来清空历史保留信息\n                        store.dispatch('Logout').then(() => {\n                            next({\n                                path: loginRoutePath,\n                                query: {\n                                    redirect: to.fullPath\n                                }\n                            })\n                        })\n                    })\n            } else {\n                next()\n            }\n        }\n    } else {\n        if (whiteList.includes(to.name)) {\n            // 在免登录白名单，直接进入\n            next()\n        } else {\n            next({\n                path: loginRoutePath,\n                query: {\n                    redirect: to.fullPath\n                }\n            })\n            NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n        }\n    }\n})\n\nrouter.afterEach(() => {\n    NProgress.done() // finish progress bar\n})\n"]}]}