{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js!/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js??ref--13-0!/Users/alone/VueProjects/one-piece-vue/src/permission.js","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/permission.js","mtime":1596199275442},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js","mtime":1595422850086},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/eslint-loader/index.js","mtime":1595422972371}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2Fsb25lL1Z1ZVByb2plY3RzL29uZS1waWVjZS12dWUvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgcm91dGVyIGZyb20gJy4vcm91dGVyJzsKaW1wb3J0IHN0b3JlIGZyb20gJy4vc3RvcmUnOwppbXBvcnQgc3RvcmFnZSBmcm9tICdzdG9yZSc7CmltcG9ydCBOUHJvZ3Jlc3MgZnJvbSAnbnByb2dyZXNzJzsgLy8gcHJvZ3Jlc3MgYmFyCgppbXBvcnQgJ0AvY29tcG9uZW50cy9OUHJvZ3Jlc3MvbnByb2dyZXNzLmxlc3MnOyAvLyBwcm9ncmVzcyBiYXIgY3VzdG9tIHN0eWxlCgppbXBvcnQgbm90aWZpY2F0aW9uIGZyb20gJ2FudC1kZXNpZ24tdnVlL2VzL25vdGlmaWNhdGlvbic7CmltcG9ydCB7IEFDQ0VTU19UT0tFTiB9IGZyb20gJ0Avc3RvcmUvbXV0YXRpb24tdHlwZXMnOwpOUHJvZ3Jlc3MuY29uZmlndXJlKHsKICBzaG93U3Bpbm5lcjogZmFsc2UKfSk7IC8vIOeZveWQjeWNlQoKdmFyIHdoaXRlTGlzdCA9IFsnbG9naW4nXTsKdmFyIGxvZ2luUm91dGVQYXRoID0gJy91c2VyL2xvZ2luJzsKdmFyIGRlZmF1bHRSb3V0ZVBhdGggPSAnL2Rhc2hib2FyZC93b3JrcGxhY2UnOwpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBOUHJvZ3Jlc3Muc3RhcnQoKTsgLy8gc3RhcnQgcHJvZ3Jlc3MgYmFyCgogIC8qIGhhcyB0b2tlbiAqLwoKICBpZiAoc3RvcmFnZS5nZXQoQUNDRVNTX1RPS0VOKSkgewogICAgaWYgKHRvLnBhdGggPT09IGxvZ2luUm91dGVQYXRoKSB7CiAgICAgIG5leHQoewogICAgICAgIHBhdGg6IGRlZmF1bHRSb3V0ZVBhdGgKICAgICAgfSk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7CiAgICB9IGVsc2UgewogICAgICAvLyBjaGVjayBsb2dpbiB1c2VyLnBlcm1pc3Npb25zIGlzIG51bGwKICAgICAgaWYgKHN0b3JlLmdldHRlcnMucGVybWlzc2lvbnMubGVuZ3RoID09PSAwKSB7CiAgICAgICAgLy8gcmVxdWVzdCBsb2dpbiB1c2VySW5mbwogICAgICAgIHN0b3JlLmRpc3BhdGNoKCdHZXRJbmZvJykudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAvLyBjb25zdCByb2xlcyA9IHJlcy5yZXN1bHQgJiYgcmVzLnJlc3VsdC5yb2xlCiAgICAgICAgICB2YXIgcGVybWlzc2lvbnMgPSByZXMuZGF0YS5wZXJtaXNzaW9uczsKICAgICAgICAgIHZhciBtZW51cyA9IHJlcy5kYXRhLm1lbnVzOyAvLyAvLyBnZW5lcmF0ZSBkeW5hbWljIHJvdXRlcgoKICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdHZW5lcmF0ZVJvdXRlcycsIHsKICAgICAgICAgICAgLy8gcm9sZXMsCiAgICAgICAgICAgIHBlcm1pc3Npb25zOiBwZXJtaXNzaW9ucywKICAgICAgICAgICAgbWVudXM6IG1lbnVzCiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgLy8g5qC55o2ucm9sZXPmnYPpmZDnlJ/miJDlj6/orr/pl67nmoTot6/nlLHooagKICAgICAgICAgICAgLy8g5Yqo5oCB5re75Yqg5Y+v6K6/6Zeu6Lev55Sx6KGoCiAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoc3RvcmUuZ2V0dGVycy5hZGRSb3V0ZXJzKTsgLy8g6K+35rGC5bim5pyJIHJlZGlyZWN0IOmHjeWumuWQkeaXtu+8jOeZu+W9leiHquWKqOmHjeWumuWQkeWIsOivpeWcsOWdgAoKICAgICAgICAgICAgdmFyIHJlZGlyZWN0ID0gZGVjb2RlVVJJQ29tcG9uZW50KGZyb20ucXVlcnkucmVkaXJlY3QgfHwgdG8ucGF0aCk7CgogICAgICAgICAgICBpZiAodG8ucGF0aCA9PT0gcmVkaXJlY3QpIHsKICAgICAgICAgICAgICAvLyBzZXQgdGhlIHJlcGxhY2U6IHRydWUgc28gdGhlIG5hdmlnYXRpb24gd2lsbCBub3QgbGVhdmUgYSBoaXN0b3J5IHJlY29yZAogICAgICAgICAgICAgIG5leHQoX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCB0byksIHt9LCB7CiAgICAgICAgICAgICAgICByZXBsYWNlOiB0cnVlCiAgICAgICAgICAgICAgfSkpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOi3s+i9rOWIsOebrueahOi3r+eUsQogICAgICAgICAgICAgIG5leHQoewogICAgICAgICAgICAgICAgcGF0aDogcmVkaXJlY3QKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKCkgewogICAgICAgICAgbm90aWZpY2F0aW9uLmVycm9yKHsKICAgICAgICAgICAgbWVzc2FnZTogJ+mUmeivrycsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAn6K+35rGC55So5oi35L+h5oGv5aSx6LSl77yM6K+36YeN6K+VJwogICAgICAgICAgfSk7IC8vIOWksei0peaXtu+8jOiOt+WPlueUqOaIt+S/oeaBr+Wksei0peaXtu+8jOiwg+eUqOeZu+WHuu+8jOadpea4heepuuWOhuWPsuS/neeVmeS/oeaBrwoKICAgICAgICAgIHN0b3JlLmRpc3BhdGNoKCdMb2dvdXQnKS50aGVuKGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgcGF0aDogbG9naW5Sb3V0ZVBhdGgsCiAgICAgICAgICAgICAgcXVlcnk6IHsKICAgICAgICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBuZXh0KCk7CiAgICAgIH0KICAgIH0KICB9IGVsc2UgewogICAgaWYgKHdoaXRlTGlzdC5pbmNsdWRlcyh0by5uYW1lKSkgewogICAgICAvLyDlnKjlhY3nmbvlvZXnmb3lkI3ljZXvvIznm7TmjqXov5vlhaUKICAgICAgbmV4dCgpOwogICAgfSBlbHNlIHsKICAgICAgbmV4dCh7CiAgICAgICAgcGF0aDogbG9naW5Sb3V0ZVBhdGgsCiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHJlZGlyZWN0OiB0by5mdWxsUGF0aAogICAgICAgIH0KICAgICAgfSk7CiAgICAgIE5Qcm9ncmVzcy5kb25lKCk7IC8vIGlmIGN1cnJlbnQgcGFnZSBpcyBsb2dpbiB3aWxsIG5vdCB0cmlnZ2VyIGFmdGVyRWFjaCBob29rLCBzbyBtYW51YWxseSBoYW5kbGUgaXQKICAgIH0KICB9Cn0pOwpyb3V0ZXIuYWZ0ZXJFYWNoKGZ1bmN0aW9uICgpIHsKICBOUHJvZ3Jlc3MuZG9uZSgpOyAvLyBmaW5pc2ggcHJvZ3Jlc3MgYmFyCn0pOw=="},{"version":3,"sources":["/Users/alone/VueProjects/one-piece-vue/src/permission.js"],"names":["router","store","storage","NProgress","notification","ACCESS_TOKEN","configure","showSpinner","whiteList","loginRoutePath","defaultRoutePath","beforeEach","to","from","next","start","get","path","done","getters","permissions","length","dispatch","then","res","data","menus","addRoutes","addRouters","redirect","decodeURIComponent","query","replace","catch","error","message","description","fullPath","includes","name","afterEach"],"mappings":"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","sourcesContent":["import router from './router'\nimport store from './store'\nimport storage from 'store'\nimport NProgress from 'nprogress' // progress bar\nimport '@/components/NProgress/nprogress.less' // progress bar custom style\nimport notification from 'ant-design-vue/es/notification'\nimport {\n    ACCESS_TOKEN\n} from '@/store/mutation-types'\n\nNProgress.configure({\n    showSpinner: false\n})\n\n// 白名单\nconst whiteList = ['login']\nconst loginRoutePath = '/user/login'\nconst defaultRoutePath = '/dashboard/workplace'\n\nrouter.beforeEach((to, from, next) => {\n    NProgress.start() // start progress bar\n    /* has token */\n    if (storage.get(ACCESS_TOKEN)) {\n        if (to.path === loginRoutePath) {\n            next({\n                path: defaultRoutePath\n            })\n            NProgress.done()\n        } else {\n            // check login user.permissions is null\n            if (store.getters.permissions.length === 0) {\n                // request login userInfo\n                store\n                    .dispatch('GetInfo')\n                    .then(res => {\n                        // const roles = res.result && res.result.role\n                        const permissions = res.data.permissions\n                        const menus = res.data.menus\n\n                        // // generate dynamic router\n                        store.dispatch('GenerateRoutes', {\n                            // roles,\n                            permissions,\n                            menus\n                        }).then(() => {\n                            // 根据roles权限生成可访问的路由表\n                            // 动态添加可访问路由表\n                            router.addRoutes(store.getters.addRouters)\n                            // 请求带有 redirect 重定向时，登录自动重定向到该地址\n                            const redirect = decodeURIComponent(from.query.redirect || to.path)\n                            if (to.path === redirect) {\n                                // set the replace: true so the navigation will not leave a history record\n                                next({\n                                    ...to,\n                                    replace: true\n                                })\n                            } else {\n                                // 跳转到目的路由\n                                next({\n                                    path: redirect\n                                })\n                            }\n                        })\n                    })\n                    .catch(() => {\n                        notification.error({\n                            message: '错误',\n                            description: '请求用户信息失败，请重试'\n                        })\n                        // 失败时，获取用户信息失败时，调用登出，来清空历史保留信息\n                        store.dispatch('Logout').then(() => {\n                            next({\n                                path: loginRoutePath,\n                                query: {\n                                    redirect: to.fullPath\n                                }\n                            })\n                        })\n                    })\n            } else {\n                next()\n            }\n        }\n    } else {\n        if (whiteList.includes(to.name)) {\n            // 在免登录白名单，直接进入\n            next()\n        } else {\n            next({\n                path: loginRoutePath,\n                query: {\n                    redirect: to.fullPath\n                }\n            })\n            NProgress.done() // if current page is login will not trigger afterEach hook, so manually handle it\n        }\n    }\n})\n\nrouter.afterEach(() => {\n    NProgress.done() // finish progress bar\n})\n"]}]}