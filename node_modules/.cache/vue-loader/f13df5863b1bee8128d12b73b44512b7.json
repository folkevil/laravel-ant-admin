{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/one-piece-vue/src/views/permission/menu/components/PermissionForm.vue?vue&type=template&id=25a0d852&scoped=true&","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/views/permission/menu/components/PermissionForm.vue","mtime":1596714177600},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1596109940102},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js","mtime":1596109940102}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}