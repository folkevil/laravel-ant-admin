{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/one-piece-vue/src/views/permission/role/Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/views/permission/role/Index.vue","mtime":1597476828449},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/babel-loader/lib/index.js","mtime":1595422850086},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js","mtime":1596109940102}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IFNUYWJsZSB9IGZyb20gJ0AvY29tcG9uZW50cycKaW1wb3J0IFJvbGVGb3JtIGZyb20gJy4vY29tcG9uZW50cy9Sb2xlRm9ybScKaW1wb3J0IHsgZmV0Y2hSb2xlLCBhZGRSb2xlLCB1cGRhdGVSb2xlLCBkZWxldGVSb2xlIH0gZnJvbSAnQC9hcGkvcm9sZScKY29uc3Qgc3RhdHVzTWFwID0gewogICAgMDogewogICAgICAgIHN0YXR1czogJ2RlZmF1bHQnLAogICAgICAgIHRleHQ6ICflt7LnpoHnlKgnCiAgICB9LAogICAgMTogewogICAgICAgIHN0YXR1czogJ3Byb2Nlc3NpbmcnLAogICAgICAgIHRleHQ6ICfkvb/nlKjkuK0nCiAgICB9Cn0KCmNvbnN0IGNvbHVtbnMgPSBbewogICAgICAgIHRpdGxlOiAn5ZSv5LiA6K+G5Yir56CBJywKICAgICAgICBkYXRhSW5kZXg6ICduYW1lJwogICAgfSwKICAgIHsKICAgICAgICB0aXRsZTogJ+inkuiJsuWQjeensCcsCiAgICAgICAgc2NvcGVkU2xvdHM6IHsgY3VzdG9tUmVuZGVyOiAnZnVsbHRpdGxlJyB9CiAgICB9LAogICAgewogICAgICAgIHRpdGxlOiAn6KeS6Imy54q25oCBJywKICAgICAgICBzY29wZWRTbG90czogeyBjdXN0b21SZW5kZXI6ICdzdGF0dXMnIH0KICAgIH0sCiAgICB7CiAgICAgICAgdGl0bGU6ICfliJvlu7rml7bpl7QnLAogICAgICAgIGRhdGFJbmRleDogJ2NyZWF0ZWRfYXQnCiAgICB9LAogICAgewogICAgICAgIHRpdGxlOiAn5pON5L2cJywKICAgICAgICBzY29wZWRTbG90czogeyBjdXN0b21SZW5kZXI6ICd0b29scycgfQogICAgfQpdCmV4cG9ydCBkZWZhdWx0IHsKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgY29uZmlybUxvYWRpbmc6IGZhbHNlLAogICAgICAgICAgICBpbmZvOiB7fSwKICAgICAgICAgICAgcnVsZXM6IFtdLAogICAgICAgICAgICByb2xlVmlzaWJsZTogZmFsc2UsCiAgICAgICAgICAgIHJvbGVzOiBbXSwKICAgICAgICAgICAgZGF0YUFjY2Vzc1Zpc2FibGU6IGZhbHNlLAogICAgICAgICAgICBkYXRhQWNjZXNzRGVmYXVsdEV4cGFuZGVkS2V5czogW10sCiAgICAgICAgICAgIHNlbGVjdGVkSWQ6IDAsCiAgICAgICAgICAgIHJvbGVUcmVlOiBbXSwKICAgICAgICAgICAgcXVlcnlQYXJhbToge30sCiAgICAgICAgICAgIHJvbGVGb3JtVGl0bGU6ICfop5LoibLooajljZUnLAogICAgICAgICAgICBsb2FkRGF0YTogcGFyYW1ldGVyID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaFJvbGUoKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyByb2xlcywgcnVsZXMgfSA9IHJlcy5kYXRhCiAgICAgICAgICAgICAgICAgICAgdGhpcy5yb2xlcyA9IHJvbGVzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ydWxlcyA9IHJ1bGVzCiAgICAgICAgICAgICAgICAgICAgdGhpcy5ydWxlc1NlbGVjdGVkSW5pdChydWxlcykKCiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogcm9sZXMKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9LAogICAgICAgICAgICBzZWxlY3RlZFJvd3M6IFtdLAogICAgICAgICAgICBhbGxBY3Rpb25JZHM6IFtdLAogICAgICAgICAgICBjb2x1bW5zCiAgICAgICAgfQogICAgfSwKICAgIGNvbXBvbmVudHM6IHsgU1RhYmxlLCBSb2xlRm9ybSB9LAogICAgd2F0Y2g6IHt9LAogICAgZmlsdGVyczogewogICAgICAgIHN0YXR1c0ZpbHRlcih0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0dXNNYXBbdHlwZV0udGV4dAogICAgICAgIH0sCiAgICAgICAgc3RhdHVzVHlwZUZpbHRlcih0eXBlKSB7CiAgICAgICAgICAgIHJldHVybiBzdGF0dXNNYXBbdHlwZV0uc3RhdHVzCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICBvbkFkZFJvbGUoKSB7CiAgICAgICAgICAgIHRoaXMucm9sZUZvcm1UaXRsZSA9ICfmlrDlu7onCiAgICAgICAgICAgIHRoaXMucm9sZVZpc2libGUgPSB0cnVlCiAgICAgICAgICAgIHRoaXMuZmlsdGVyUnVsZUFjdGlvbigpCiAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMucm9sZUZvcm0uZm9ybS5zZXRGaWVsZHNWYWx1ZSgpCiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKICAgICAgICBzaG93Um9sZU1vZGFsKHJvdykgewogICAgICAgICAgICB0aGlzLnJvbGVWaXNpYmxlID0gdHJ1ZQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkSWQgPSByb3cuaWQKICAgICAgICAgICAgdGhpcy5pbmZvID0gcm93CiAgICAgICAgICAgIHRoaXMucm9sZUZvcm1UaXRsZSA9ICfnvJbovpEnCgogICAgICAgICAgICB0aGlzLmZpbHRlclJ1bGVBY3Rpb24oKQoKICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICAgICAgICAgICAgdGhpcy4kcmVmcy5yb2xlRm9ybS5mb3JtLnNldEZpZWxkc1ZhbHVlKHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiByb3cubmFtZSwKICAgICAgICAgICAgICAgICAgICB0aXRsZTogcm93LnRpdGxlLAogICAgICAgICAgICAgICAgICAgIHN0YXR1czogcm93LnN0YXR1cwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfSkKICAgICAgICB9LAogICAgICAgIGhhbmRsZVJvbGVDYW5jZWwoKSB7CiAgICAgICAgICAgIHRoaXMucm9sZVZpc2libGUgPSBmYWxzZQogICAgICAgICAgICB0aGlzLiRyZWZzLnJvbGVGb3JtLmZvcm0ucmVzZXRGaWVsZHMoKQogICAgICAgICAgICB0aGlzLnNlbGVjdGVkSWQgPSAwCiAgICAgICAgICAgIHRoaXMucnVsZXMubWFwKHJ1bGUgPT4gewogICAgICAgICAgICAgICAgcnVsZS5zZWxlY3RlZCA9IFtdCiAgICAgICAgICAgICAgICBydWxlLmluZGV0ZXJtaW5hdGUgPSBmYWxzZQogICAgICAgICAgICAgICAgcnVsZS5jaGVja2VkQWxsID0gZmFsc2UKICAgICAgICAgICAgICAgIHJ1bGUuZGlzYWJsZWQgPSBmYWxzZQogICAgICAgICAgICAgICAgcnVsZS5hY3Rpb25zLm1hcChhY3Rpb24gPT4gewogICAgICAgICAgICAgICAgICAgIGFjdGlvbi5kaXNhYmxlZCA9IGZhbHNlCiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlUm9sZVN1Ym1pdCgpIHsKICAgICAgICAgICAgdGhpcy4kcmVmcy5yb2xlRm9ybS5mb3JtLnZhbGlkYXRlRmllbGRzKChlcnIsIHZhbHVlcykgPT4gewogICAgICAgICAgICAgICAgaWYgKCFlcnIpIHsKICAgICAgICAgICAgICAgICAgICBjb25zdCBjaGVja2VkTGlzdCA9IFtdCiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBzZWxlY3RlZElkLCBydWxlcyB9ID0gdGhpcwogICAgICAgICAgICAgICAgICAgIHJ1bGVzLm1hcChpdGVtID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS5zZWxlY3RlZC5tYXAocyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGVja2VkTGlzdC5wdXNoKHMpCiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB2YWx1ZXMucnVsZXMgPSBjaGVja2VkTGlzdAogICAgICAgICAgICAgICAgICAgIGNvbnN0IHByb21pc2UgPSBzZWxlY3RlZElkID09PSAwID8gYWRkUm9sZSh2YWx1ZXMpIDogdXBkYXRlUm9sZShzZWxlY3RlZElkLCB2YWx1ZXMpCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb25maXJtTG9hZGluZyA9IHRydWUKICAgICAgICAgICAgICAgICAgICBjb25zdCBoaWRlID0gdGhpcy4kbWVzc2FnZS5sb2FkaW5nKCfmiafooYzkuK0uLicsIDApCiAgICAgICAgICAgICAgICAgICAgcHJvbWlzZS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcyh0aGlzLnNlbGVjdGVkSWQgPT09IDAgPyAn5re75Yqg5oiQ5Yqf77yBJyA6ICfmm7TmlrDmiJDlip/vvIEnKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmhhbmRsZVJvbGVDYW5jZWwoKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlZnJlc2hUYWJsZSgpCiAgICAgICAgICAgICAgICAgICAgfSkuZmluYWxseSgoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUoKQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNvbmZpcm1Mb2FkaW5nID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgIH0sCiAgICAgICAgaGFuZGxlUm9sZURlbGV0ZUNvbmZpcm0oaWQpIHsKICAgICAgICAgICAgdGhpcy4kY29uZmlybSh7CiAgICAgICAgICAgICAgICB0aXRsZTogJ+ehruWumuWIoOmZpOatpOinkuiJsuWQlz8nLAogICAgICAgICAgICAgICAgY29udGVudDogJycsCiAgICAgICAgICAgICAgICBva1RleHQ6ICfnoa7lrponLAogICAgICAgICAgICAgICAgb2tUeXBlOiAnZGFuZ2VyJywKICAgICAgICAgICAgICAgIGNhbmNlbFRleHQ6ICflj5bmtognLAogICAgICAgICAgICAgICAgb25PazogKCkgPT4gewogICAgICAgICAgICAgICAgICAgIGNvbnN0IGhpZGUgPSB0aGlzLiRtZXNzYWdlLmxvYWRpbmcoJ+WIoOmZpOS4rS4uJywgMCkKICAgICAgICAgICAgICAgICAgICBkZWxldGVSb2xlKGlkKS50aGVuKHJlcyA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5Yig6Zmk5oiQ5Yqf77yBJykKICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5yZWZyZXNoVGFibGUoKQogICAgICAgICAgICAgICAgICAgIH0pLmZpbmFsbHkociA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGhpZGUoKQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgfSwKCiAgICAgICAgZXhwYW5kZWREZXB0KGRlcHRzKSB7CiAgICAgICAgICAgIGNvbnN0IGV4cGFuZGVkS2V5cyA9IFtdCiAgICAgICAgICAgIGRlcHRzLm1hcChkZXB0ID0+IHsKICAgICAgICAgICAgICAgIGV4cGFuZGVkS2V5cy5wdXNoKGRlcHQudmFsdWUpCiAgICAgICAgICAgICAgICBpZiAoZGVwdC5jaGlsZHJlbiAhPT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgICAgICAgZXhwYW5kZWRLZXlzLnB1c2goLi4udGhpcy5leHBhbmRlZERlcHQoZGVwdC5jaGlsZHJlbikpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCgogICAgICAgICAgICByZXR1cm4gZXhwYW5kZWRLZXlzCiAgICAgICAgfSwKCiAgICAgICAgb25DaGFuZ2VBY3Rpb24ocGVybWlzc2lvbikgewogICAgICAgICAgICBsZXQgbm90RGlzYWJsZWRMZW4gPSAwCiAgICAgICAgICAgIHBlcm1pc3Npb24uYWN0aW9ucy5tYXAoYWN0aW9uID0+IHsKICAgICAgICAgICAgICAgIGlmIChhY3Rpb24uZGlzYWJsZWQgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgbm90RGlzYWJsZWRMZW4gPSBub3REaXNhYmxlZExlbiArIDEKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgcGVybWlzc2lvbi5pbmRldGVybWluYXRlID0gISFwZXJtaXNzaW9uLnNlbGVjdGVkLmxlbmd0aCAmJiAocGVybWlzc2lvbi5zZWxlY3RlZC5sZW5ndGggPCBub3REaXNhYmxlZExlbikKICAgICAgICAgICAgcGVybWlzc2lvbi5jaGVja2VkQWxsID0gcGVybWlzc2lvbi5zZWxlY3RlZC5sZW5ndGggPT09IG5vdERpc2FibGVkTGVuCiAgICAgICAgICAgIHRoaXMucnVsZXMgPSBbLi4udGhpcy5ydWxlc10KICAgICAgICB9LAoKICAgICAgICBvbkNoZWNrQWxsQWN0aW9uQ2hhbmdlKGUsIHBlcm1pc3Npb24pIHsKICAgICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgICAgICAgLy8g6K6w5b2V5pyJ5p2D6ZmQ55qE5pON5L2cCiAgICAgICAgICAgIGNvbnN0IGhhc1Blcm1pc3Npb25BY3Rpb24gPSBbXQogICAgICAgICAgICBwZXJtaXNzaW9uLmFjdGlvbnMubWFwKGFjdGlvbiA9PiB7CiAgICAgICAgICAgICAgICBpZiAoYWN0aW9uLmRpc2FibGVkID09PSBmYWxzZSkgewogICAgICAgICAgICAgICAgICAgIGhhc1Blcm1pc3Npb25BY3Rpb24ucHVzaChhY3Rpb24uaWQpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIE9iamVjdC5hc3NpZ24ocGVybWlzc2lvbiwgewogICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGUudGFyZ2V0LmNoZWNrZWQgPyBoYXNQZXJtaXNzaW9uQWN0aW9uIDogW10sCiAgICAgICAgICAgICAgICBpbmRldGVybWluYXRlOiBmYWxzZSwKICAgICAgICAgICAgICAgIGNoZWNrZWRBbGw6IGUudGFyZ2V0LmNoZWNrZWQKICAgICAgICAgICAgfSkKICAgICAgICAgICAgdGhpcy5ydWxlcyA9IFsuLi50aGlzLnJ1bGVzXQogICAgICAgIH0sCiAgICAgICAgb25DaGFuZ2VBbGwoKSB7CgogICAgICAgIH0sCiAgICAgICAgcmVmcmVzaFRhYmxlKCkgewogICAgICAgICAgICB0aGlzLiRyZWZzLnRhYmxlLnJlZnJlc2goKQogICAgICAgIH0sCiAgICAgICAgZmlsdGVyUnVsZUFjdGlvbigpIHsKICAgICAgICAgICAgY29uc3QgeyBydWxlcyB9ID0gdGhpcwogICAgICAgICAgICBsZXQgYWxsUGVybWlzc2lvbkFjdGlvbnNJZHMgPSBbXQogICAgICAgICAgICBhbGxQZXJtaXNzaW9uQWN0aW9uc0lkcyA9IHRoaXMuYWxsQWN0aW9uSWRzCiAgICAgICAgICAgIC8vIOabtOaWsOaXtiDoh6rliqjli77pgInlt7LpgInmi6nnmoTmnYPpmZAKICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0ZWRJZCA+IDApIHsKICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5mbzogeyBwZXJtaXNzaW9ucyB9IH0gPSB0aGlzCiAgICAgICAgICAgICAgICBydWxlcy5tYXAocnVsZSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcnVsZS5zZWxlY3RlZCA9IFtdCiAgICAgICAgICAgICAgICAgICAgLy8g6K6w5b2V5b2T5YmN6I+c5Y2V5Y+v6YCJ5pON5L2c5pWw6YePCiAgICAgICAgICAgICAgICAgICAgbGV0IHJ1bGVTZWxlY3RDb3VudCA9IDAKCiAgICAgICAgICAgICAgICAgICAgcnVsZS5hY3Rpb25zLm1hcChhY3Rpb24gPT4gewogICAgICAgICAgICAgICAgICAgICAgICBpZiAocGVybWlzc2lvbnMuaW5kZXhPZihhY3Rpb24uaWQpICE9PSAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgcnVsZS5zZWxlY3RlZC5wdXNoKGFjdGlvbi5pZCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb24uZGlzYWJsZWQgPSBhbGxQZXJtaXNzaW9uQWN0aW9uc0lkcy5pbmRleE9mKGFjdGlvbi5pZCkgPT09IC0xCiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChhY3Rpb24uZGlzYWJsZWQgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBydWxlU2VsZWN0Q291bnQgPSBydWxlU2VsZWN0Q291bnQgKyAxCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9KQoKICAgICAgICAgICAgICAgICAgICBydWxlLmluZGV0ZXJtaW5hdGUgPSAhIXJ1bGUuc2VsZWN0ZWQubGVuZ3RoICYmIChydWxlLnNlbGVjdGVkLmxlbmd0aCA8IHJ1bGVTZWxlY3RDb3VudCkKICAgICAgICAgICAgICAgICAgICBpZiAocnVsZS5zZWxlY3RlZC5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcnVsZS5jaGVja2VkQWxsID0gcnVsZS5zZWxlY3RlZC5sZW5ndGggPT09IHJ1bGVTZWxlY3RDb3VudAogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAvLyDliJvlu7rml7YKICAgICAgICAgICAgICAgIHJ1bGVzLm1hcChydWxlID0+IHsKICAgICAgICAgICAgICAgICAgICBydWxlLmFjdGlvbnMubWFwKGFjdGlvbiA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGFjdGlvbi5kaXNhYmxlZCA9IGFsbFBlcm1pc3Npb25BY3Rpb25zSWRzLmluZGV4T2YoYWN0aW9uLmlkKSA9PT0gLTEKICAgICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLnJ1bGVzID0gWy4uLnJ1bGVzXQogICAgICAgIH0sCiAgICAgICAgcnVsZXNTZWxlY3RlZEluaXQocnVsZXMpIHsKICAgICAgICAgICAgY29uc3QgYWxsQWN0aW9uSWRzID0gW10KICAgICAgICAgICAgdGhpcy5ydWxlcyA9IHJ1bGVzLm1hcChpdGVtID0+IHsKICAgICAgICAgICAgICAgIE9iamVjdC5hc3NpZ24oaXRlbSwgewogICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBbXSwKICAgICAgICAgICAgICAgICAgICBpbmRldGVybWluYXRlOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBjaGVja2VkQWxsOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogZmFsc2UKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAvLyDliJ3lp4vljJbnirbmgIEKICAgICAgICAgICAgICAgIGlmIChpdGVtLmFjdGlvbnMubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgIGl0ZW0uYWN0aW9ucy5tYXAoYWN0aW9uID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgYWxsQWN0aW9uSWRzLnB1c2goYWN0aW9uLmlkKQogICAgICAgICAgICAgICAgICAgICAgICBhY3Rpb24uZGlzYWJsZWQgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gaXRlbQogICAgICAgICAgICB9KQogICAgICAgICAgICB0aGlzLmFsbEFjdGlvbklkcyA9IGFsbEFjdGlvbklkcwogICAgICAgIH0sCiAgICAgICAgZXhwYW5kSWNvbih7IGV4cGFuZGVkIH0pIHsKICAgICAgICAgICAgaWYgKGV4cGFuZGVkID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gPGEtaWNvbiB0eXBlID0gJ2Rvd24nIC8+CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIDxhLWljb24gdHlwZSA9ICdyaWdodCcgLz4KICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"Index.vue","sourceRoot":"src/views/permission/role","sourcesContent":["<template>\n    <page-header-wrapper>\n        <a-card :body-style=\"{ padding: 0 }\">\n            <div class=\"table-operator-right\">\n                <a-button v-action:addRole type=\"primary\" icon=\"plus\" @click=\"onAddRole\">新建</a-button>\n                <a-divider type=\"vertical\"/>\n                <span class=\"ant-pro-table-toolbar-item-icon\">\n                    <a-tooltip placement=\"top\">\n                    <template slot=\"title\">\n                        <span>刷新</span>\n                    </template>\n                    <a-icon type=\"reload\" @click=\"refreshTable()\"/>\n                    </a-tooltip>\n                </span>\n            </div>\n            <s-table\n                ref=\"table\"\n                size=\"default\"\n                :rowKey=\"(record) => record.id\"\n                :columns=\"columns\"\n                :data=\"loadData\"\n                :expandRowByClick=\"true\"\n                :showPagination=\"false\"\n                :expandIcon=\"expandIcon\"\n            >\n\n            <p slot=\"expandedRowRender\" slot-scope=\"row\">\n                <a-row>\n                    <a-col class=\"rule-list\" span=\"12\" v-for=\"(item, index) in rules\" :key=\"index\">\n                    <a-row>\n                        <a-col span=\"4\">{{ item.title }}：</a-col>\n                        <a-col span=\"20\">\n                        <template v-if=\"!item.actions.length\">-</template>\n                        <template v-for=\"(action, i) in item.actions\">\n                            <a-tag color=\"blue\" :key=\"i\" v-if=\"row.permissions.indexOf(action.id) !== -1\">\n                                {{ action.title }}\n                            </a-tag>\n                            <a-tag :key=\"i\" v-else>\n                                {{ action.title }}\n                            </a-tag>\n                        </template>\n                        </a-col>\n                    </a-row>\n                    </a-col>\n                </a-row>\n            </p>\n\n            <template slot=\"status\" slot-scope=\"row\">\n                <a-badge :status=\"row.status | statusTypeFilter\" :text=\"row.status | statusFilter\" />\n            </template>\n\n            <template slot=\"fulltitle\" slot-scope=\"row\">\n                <span v-html=\"row.title\"></span>\n            </template>\n\n            <template slot=\"tools\" slot-scope=\"row\">\n                <a v-action:editRole @click=\"showRoleModal(row)\">编辑</a>\n                <a-divider type=\"vertical\" />\n                <a v-action:deleteRole @click=\"handleRoleDeleteConfirm(row.id)\">删除</a>\n            </template>\n      </s-table>\n    </a-card>\n\n    <RoleForm\n        ref=\"roleForm\"\n        :title=\"roleFormTitle\"\n        :rules=\"rules\"\n        :visible=\"roleVisible\"\n        :confirmLoading=\"confirmLoading\"\n        @changeRole=\"filterRuleAction\"\n        @checkAllActionChange=\"onCheckAllActionChange\"\n        @changeAction=\"onChangeAction\"\n        @changeAll=\"onChangeAll\"\n        @submit=\"handleRoleSubmit\"\n        @cancel=\"handleRoleCancel\"\n    />\n\n  </page-header-wrapper>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport RoleForm from './components/RoleForm'\nimport { fetchRole, addRole, updateRole, deleteRole } from '@/api/role'\nconst statusMap = {\n    0: {\n        status: 'default',\n        text: '已禁用'\n    },\n    1: {\n        status: 'processing',\n        text: '使用中'\n    }\n}\n\nconst columns = [{\n        title: '唯一识别码',\n        dataIndex: 'name'\n    },\n    {\n        title: '角色名称',\n        scopedSlots: { customRender: 'fulltitle' }\n    },\n    {\n        title: '角色状态',\n        scopedSlots: { customRender: 'status' }\n    },\n    {\n        title: '创建时间',\n        dataIndex: 'created_at'\n    },\n    {\n        title: '操作',\n        scopedSlots: { customRender: 'tools' }\n    }\n]\nexport default {\n    data() {\n        return {\n            confirmLoading: false,\n            info: {},\n            rules: [],\n            roleVisible: false,\n            roles: [],\n            dataAccessVisable: false,\n            dataAccessDefaultExpandedKeys: [],\n            selectedId: 0,\n            roleTree: [],\n            queryParam: {},\n            roleFormTitle: '角色表单',\n            loadData: parameter => {\n                return fetchRole().then(res => {\n                    const { roles, rules } = res.data\n                    this.roles = roles\n                    this.rules = rules\n                    this.rulesSelectedInit(rules)\n\n                    return {\n                        data: roles\n                    }\n                })\n            },\n            selectedRows: [],\n            allActionIds: [],\n            columns\n        }\n    },\n    components: { STable, RoleForm },\n    watch: {},\n    filters: {\n        statusFilter(type) {\n            return statusMap[type].text\n        },\n        statusTypeFilter(type) {\n            return statusMap[type].status\n        }\n    },\n    methods: {\n        onAddRole() {\n            this.roleFormTitle = '新建'\n            this.roleVisible = true\n            this.filterRuleAction()\n            this.$nextTick(() => {\n                this.$refs.roleForm.form.setFieldsValue()\n            })\n        },\n        showRoleModal(row) {\n            this.roleVisible = true\n            this.selectedId = row.id\n            this.info = row\n            this.roleFormTitle = '编辑'\n\n            this.filterRuleAction()\n\n            this.$nextTick(() => {\n                this.$refs.roleForm.form.setFieldsValue({\n                    name: row.name,\n                    title: row.title,\n                    status: row.status\n                })\n            })\n        },\n        handleRoleCancel() {\n            this.roleVisible = false\n            this.$refs.roleForm.form.resetFields()\n            this.selectedId = 0\n            this.rules.map(rule => {\n                rule.selected = []\n                rule.indeterminate = false\n                rule.checkedAll = false\n                rule.disabled = false\n                rule.actions.map(action => {\n                    action.disabled = false\n                })\n            })\n        },\n        handleRoleSubmit() {\n            this.$refs.roleForm.form.validateFields((err, values) => {\n                if (!err) {\n                    const checkedList = []\n                    const { selectedId, rules } = this\n                    rules.map(item => {\n                        item.selected.map(s => {\n                            checkedList.push(s)\n                        })\n                    })\n                    values.rules = checkedList\n                    const promise = selectedId === 0 ? addRole(values) : updateRole(selectedId, values)\n                    this.confirmLoading = true\n                    const hide = this.$message.loading('执行中..', 0)\n                    promise.then(res => {\n                        this.$message.success(this.selectedId === 0 ? '添加成功！' : '更新成功！')\n                        this.handleRoleCancel()\n                        this.refreshTable()\n                    }).finally(() => {\n                        hide()\n                        this.confirmLoading = false\n                    })\n                }\n            })\n        },\n        handleRoleDeleteConfirm(id) {\n            this.$confirm({\n                title: '确定删除此角色吗?',\n                content: '',\n                okText: '确定',\n                okType: 'danger',\n                cancelText: '取消',\n                onOk: () => {\n                    const hide = this.$message.loading('删除中..', 0)\n                    deleteRole(id).then(res => {\n                        this.$message.success('删除成功！')\n                        this.refreshTable()\n                    }).finally(r => {\n                        hide()\n                    })\n                }\n            })\n        },\n\n        expandedDept(depts) {\n            const expandedKeys = []\n            depts.map(dept => {\n                expandedKeys.push(dept.value)\n                if (dept.children !== undefined) {\n                    expandedKeys.push(...this.expandedDept(dept.children))\n                }\n            })\n\n            return expandedKeys\n        },\n\n        onChangeAction(permission) {\n            let notDisabledLen = 0\n            permission.actions.map(action => {\n                if (action.disabled === false) {\n                    notDisabledLen = notDisabledLen + 1\n                }\n            })\n            permission.indeterminate = !!permission.selected.length && (permission.selected.length < notDisabledLen)\n            permission.checkedAll = permission.selected.length === notDisabledLen\n            this.rules = [...this.rules]\n        },\n\n        onCheckAllActionChange(e, permission) {\n            console.log(e)\n            // 记录有权限的操作\n            const hasPermissionAction = []\n            permission.actions.map(action => {\n                if (action.disabled === false) {\n                    hasPermissionAction.push(action.id)\n                }\n            })\n            Object.assign(permission, {\n                selected: e.target.checked ? hasPermissionAction : [],\n                indeterminate: false,\n                checkedAll: e.target.checked\n            })\n            this.rules = [...this.rules]\n        },\n        onChangeAll() {\n\n        },\n        refreshTable() {\n            this.$refs.table.refresh()\n        },\n        filterRuleAction() {\n            const { rules } = this\n            let allPermissionActionsIds = []\n            allPermissionActionsIds = this.allActionIds\n            // 更新时 自动勾选已选择的权限\n            if (this.selectedId > 0) {\n                const { info: { permissions } } = this\n                rules.map(rule => {\n                    rule.selected = []\n                    // 记录当前菜单可选操作数量\n                    let ruleSelectCount = 0\n\n                    rule.actions.map(action => {\n                        if (permissions.indexOf(action.id) !== -1) {\n                            rule.selected.push(action.id)\n                        }\n                        action.disabled = allPermissionActionsIds.indexOf(action.id) === -1\n                        if (action.disabled === false) {\n                            ruleSelectCount = ruleSelectCount + 1\n                        }\n                    })\n\n                    rule.indeterminate = !!rule.selected.length && (rule.selected.length < ruleSelectCount)\n                    if (rule.selected.length) {\n                        rule.checkedAll = rule.selected.length === ruleSelectCount\n                    }\n                })\n            } else {\n                // 创建时\n                rules.map(rule => {\n                    rule.actions.map(action => {\n                        action.disabled = allPermissionActionsIds.indexOf(action.id) === -1\n                    })\n                })\n            }\n            this.rules = [...rules]\n        },\n        rulesSelectedInit(rules) {\n            const allActionIds = []\n            this.rules = rules.map(item => {\n                Object.assign(item, {\n                    selected: [],\n                    indeterminate: false,\n                    checkedAll: false,\n                    disabled: false\n                })\n                // 初始化状态\n                if (item.actions.length > 0) {\n                    item.actions.map(action => {\n                        allActionIds.push(action.id)\n                        action.disabled = false\n                    })\n                }\n                return item\n            })\n            this.allActionIds = allActionIds\n        },\n        expandIcon({ expanded }) {\n            if (expanded === true) {\n                return <a-icon type = 'down' />\n            }\n            return <a-icon type = 'right' />\n        }\n    }\n}\n</script>\n"]}]}