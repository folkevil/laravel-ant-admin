{"remainingRequest":"/Users/alone/VueProjects/gold-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/gold-vue/src/views/user/Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"/Users/alone/VueProjects/gold-vue/src/views/user/Login.vue","mtime":1595411419809},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/css-loader/dist/cjs.js","mtime":1589980526526},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1589980529673},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/postcss-loader/src/index.js","mtime":1589980529156},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/less-loader/dist/cjs.js","mtime":1589980593763},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/cache-loader/dist/cjs.js","mtime":1589980412065},{"path":"/Users/alone/VueProjects/gold-vue/node_modules/vue-loader/lib/index.js","mtime":1589980529673}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnVzZXItbGF5b3V0LWxvZ2luIHsKICBsYWJlbCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgfQoKICAuZ2V0Q2FwdGNoYSB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHdpZHRoOiAxMDAlOwogICAgaGVpZ2h0OiA0MHB4OwogIH0KCiAgLmZvcmdlLXBhc3N3b3JkIHsKICAgIGZvbnQtc2l6ZTogMTRweDsKICB9CgogIGJ1dHRvbi5sb2dpbi1idXR0b24gewogICAgcGFkZGluZzogMCAxNXB4OwogICAgZm9udC1zaXplOiAxNnB4OwogICAgaGVpZ2h0OiA0MHB4OwogICAgd2lkdGg6IDEwMCU7CiAgfQoKICAudXNlci1sb2dpbi1vdGhlciB7CiAgICB0ZXh0LWFsaWduOiBsZWZ0OwogICAgbWFyZ2luLXRvcDogMjRweDsKICAgIGxpbmUtaGVpZ2h0OiAyMnB4OwoKICAgIC5pdGVtLWljb24gewogICAgICBmb250LXNpemU6IDI0cHg7CiAgICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMik7CiAgICAgIG1hcmdpbi1sZWZ0OiAxNnB4OwogICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgICBjdXJzb3I6IHBvaW50ZXI7CiAgICAgIHRyYW5zaXRpb246IGNvbG9yIDAuM3M7CgogICAgICAmOmhvdmVyIHsKICAgICAgICBjb2xvcjogIzE4OTBmZjsKICAgICAgfQogICAgfQoKICAgIC5yZWdpc3RlciB7CiAgICAgIGZsb2F0OiByaWdodDsKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyMA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n  <div class=\"main\">\n    <a-form\n      id=\"formLogin\"\n      class=\"user-layout-login\"\n      ref=\"formLogin\"\n      :form=\"form\"\n      @submit=\"handleSubmit\"\n    >\n      <a-tabs\n        :activeKey=\"customActiveKey\"\n        :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\"\n        @change=\"handleTabClick\"\n      >\n        <a-tab-pane key=\"tab1\" tab=\"管理员登录\">\n          <a-alert\n            v-if=\"isLoginError\"\n            type=\"error\"\n            showIcon\n            style=\"margin-bottom: 24px;\"\n            message=\"账户或密码错误\"\n          />\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"text\"\n              placeholder=\"请输入管理员账户\"\n              v-decorator=\"[\n                'name',\n                {rules: [{ required: true, message: '请输入帐户名' }, { validator: handleUsernameOrEmail }], validateTrigger: 'change'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n            </a-input>\n          </a-form-item>\n\n          <a-form-item>\n            <a-input\n              size=\"large\"\n              type=\"password\"\n              autocomplete=\"false\"\n              placeholder=\"请输入密码\"\n              v-decorator=\"[\n                'password',\n                {rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\n              ]\"\n            >\n              <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n            </a-input>\n          </a-form-item>\n        </a-tab-pane>\n      </a-tabs>\n\n      <a-form-item>\n        <a-checkbox v-decorator=\"['remember_me', { valuePropName: 'checked' }]\">自动登录</a-checkbox>\n        <router-link\n          :to=\"{ name: 'recover', params: { user: 'aaa'} }\"\n          class=\"forge-password\"\n          style=\"float: right;\"\n        >忘记密码</router-link>\n      </a-form-item>\n\n      <a-form-item style=\"margin-top:24px\">\n        <a-button\n          size=\"large\"\n          type=\"primary\"\n          htmlType=\"submit\"\n          class=\"login-button\"\n          :loading=\"state.loginBtn\"\n          :disabled=\"state.loginBtn\"\n        >登录</a-button>\n      </a-form-item>\n    </a-form>\n\n    <two-step-captcha\n      v-if=\"requiredTwoStepCaptcha\"\n      :visible=\"stepCaptchaVisible\"\n      @success=\"stepCaptchaSuccess\"\n      @cancel=\"stepCaptchaCancel\"\n    ></two-step-captcha>\n  </div>\n</template>\n\n<script>\nimport TwoStepCaptcha from '@/components/tools/TwoStepCaptcha'\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\nimport {\n    get2step\n} from '@/api/login'\n\nexport default {\n  components: {\n    TwoStepCaptcha\n  },\n  data () {\n    return {\n      customActiveKey: 'tab1',\n      loginBtn: false,\n      // login type: 0 email, 1 username, 2 telephone\n      loginType: 1,\n      isLoginError: false,\n      requiredTwoStepCaptcha: false,\n      stepCaptchaVisible: false,\n      form: this.$form.createForm(this),\n      state: {\n        time: 60,\n        loginBtn: false,\n        // login type: 0 email, 1 username, 2 telephone\n        loginType: 1,\n        smsSendBtn: false\n      }\n    }\n  },\n  created () {\n    get2step({})\n      .then(res => {\n        this.requiredTwoStepCaptcha = res.result.stepCode\n      })\n      .catch(() => {\n        this.requiredTwoStepCaptcha = false\n      })\n    // this.requiredTwoStepCaptcha = true\n  },\n  methods: {\n    ...mapActions(['Login', 'Logout']),\n    // handler\n    handleUsernameOrEmail (rule, value, callback) {\n      const { state } = this\n      const regex = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]{2,3}){1,2})$/\n      if (regex.test(value)) {\n        state.loginType = 0\n      } else {\n        state.loginType = 1\n      }\n      callback()\n    },\n    handleTabClick (key) {\n      this.customActiveKey = key\n      // this.form.resetFields()\n    },\n    handleSubmit (e) {\n      e.preventDefault()\n      const {\n        form: { validateFields },\n        state,\n        // customActiveKey,\n        Login\n      } = this\n\n      state.loginBtn = true\n\n      const validateFieldsKey = ['name', 'password', 'remember_me']\n\n      validateFields(validateFieldsKey, { force: true }, (err, values) => {\n        if (!err) {\n          const loginParams = { ...values }\n\n          Login(loginParams)\n            .then(res => this.loginSuccess(res))\n            .catch(err => this.requestFailed(err))\n            .finally(() => {\n              state.loginBtn = false\n            })\n        } else {\n          setTimeout(() => {\n            state.loginBtn = false\n          }, 600)\n        }\n      })\n    },\n\n    stepCaptchaSuccess () {\n      this.loginSuccess()\n    },\n    stepCaptchaCancel () {\n      this.Logout().then(() => {\n        this.loginBtn = false\n        this.stepCaptchaVisible = false\n      })\n    },\n    // 登录成功\n    loginSuccess (res) {\n        this.isLoginError = false\n        this.$router.push({ path: '/' })\n        // 延迟 1 秒显示欢迎信息\n        setTimeout(() => {\n            this.$notification.success({\n            message: '欢迎',\n            description: `${timeFix()}，欢迎回来`\n            })\n        }, 1000)\n    },\n    requestFailed () {\n      this.isLoginError = true\n    }\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n  label {\n    font-size: 14px;\n  }\n\n  .getCaptcha {\n    display: block;\n    width: 100%;\n    height: 40px;\n  }\n\n  .forge-password {\n    font-size: 14px;\n  }\n\n  button.login-button {\n    padding: 0 15px;\n    font-size: 16px;\n    height: 40px;\n    width: 100%;\n  }\n\n  .user-login-other {\n    text-align: left;\n    margin-top: 24px;\n    line-height: 22px;\n\n    .item-icon {\n      font-size: 24px;\n      color: rgba(0, 0, 0, 0.2);\n      margin-left: 16px;\n      vertical-align: middle;\n      cursor: pointer;\n      transition: color 0.3s;\n\n      &:hover {\n        color: #1890ff;\n      }\n    }\n\n    .register {\n      float: right;\n    }\n  }\n}\n</style>\n"]}]}