{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/one-piece-vue/src/views/permission/user/Index.vue?vue&type=style&index=0&lang=less&","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/views/permission/user/Index.vue","mtime":1597403095879},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/css-loader/dist/cjs.js","mtime":1596109946494},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596109940102},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/postcss-loader/src/index.js","mtime":1595423035501},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/less-loader/dist/cjs.js","mtime":1595423111935},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js","mtime":1596109940102}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovLyAuY29tcGFueSB7Ci8vICAgZGlzcGxheTogZmxleDsKLy8gICBhbGlnbi1pdGVtczogY2VudGVyOwovLyAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsKLy8gICBoZWlnaHQ6IDY0cHg7Ci8vICAgcGFkZGluZzogMCAyNHB4OwovLyAgIGxpbmUtaGVpZ2h0OiA2NHB4OwovLyAgICYtdGl0bGUgewovLyAgICAgZmxleDogMSAxOwovLyAgICAgY29sb3I6ICMwMDA7Ci8vICAgICBmb250LXNpemU6IDE2cHg7Ci8vICAgICBsaW5lLWhlaWdodDogMjRweDsKLy8gICAgIG9wYWNpdHk6IDAuODU7Ci8vICAgfQovLyB9Cg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/views/permission/user","sourcesContent":["<template>\n<page-header-wrapper>\n\n    <a-card :body-style=\"{ padding: 0 }\">\n        <div class=\"table-operator-right\">\n            <a-button type=\"primary\" icon=\"plus\" @click=\"roleVisible = true\">新建</a-button>\n            <a-divider type=\"vertical\"/>\n            <span class=\"ant-pro-table-toolbar-item-icon\">\n                <a-tooltip placement=\"top\">\n                <template slot=\"title\">\n                    <span>刷新</span>\n                </template>\n                <a-icon type=\"reload\" @click=\"refreshTable()\"/>\n                </a-tooltip>\n            </span>\n        </div>\n\n        <s-table\n          ref=\"table\"\n          size=\"default\"\n          :rowKey=\"(record) => record.id\"\n          :columns=\"columns\"\n          :data=\"loadData\"\n          :expandRowByClick=\"true\"\n          :expandIcon=\"expandIcon\"\n        >\n          <template slot=\"dept\" slot-scope=\"row\">\n            <a-tag color=\"green\">{{ row.name }}</a-tag>\n          </template>\n\n          <template slot=\"post\" slot-scope=\"row\">\n            <span v-if=\"row.posts.length\">\n              <a-tag\n                color=\"green\"\n                v-for=\"post in row.posts\"\n                :key=\"post.postId\"\n              >{{ post.name }}</a-tag>\n            </span>\n            <span v-else>-</span>\n          </template>\n\n          <template slot=\"status\" slot-scope=\"row\">\n            <template v-if=\"row.status === 1\">\n              <a-badge status=\"processing\" text=\"启用中\"/>\n            </template>\n            <template v-else>\n              <a-badge status=\"default\" text=\"禁用中\"/>\n            </template>\n          </template>\n\n          <template slot=\"expandedRowRender\" slot-scope=\"row\">\n            <a-row>\n              <a-col class=\"rule-list\" span=\"12\" v-for=\"(item, index) in rules\" :key=\"index\">\n                <a-row>\n                  <a-col span=\"4\">{{ item.title }}：</a-col>\n                  <a-col span=\"20\">\n                    <template v-if=\"!item.actions.length\">-</template>\n                    <template v-for=\"(action, i) in item.actions\">\n                      <a-tag :key=\"i\" v-if=\"row.rules.indexOf(action.id) !== -1\">{{ action.title }}</a-tag>\n                    </template>\n                  </a-col>\n                </a-row>\n              </a-col>\n            </a-row>\n          </template>\n\n          <template slot=\"tools\" slot-scope=\"row\">\n            <a\n              v-action:UpdateAccount\n              @click=\"$router.push({ name: 'UpdateAccountView', params: { id: row.id } })\"\n            >编辑</a>\n            <a-divider type=\"vertical\" />\n            <a v-action:DeleteAccount @click=\"showDeleteConfirm(row.id)\">删除</a>\n          </template>\n        </s-table>\n\n  </a-card>\n\n</page-header-wrapper>\n</template>\n\n<script>\nimport { STable } from '@/components'\nimport STree from '@/components/Tree/Tree'\nimport UserForm from './components/UserForm'\nimport { fetchAccount, deleteAccount } from '@/api/admin'\nconst columns = [\n  {\n    title: '账号名',\n    dataIndex: 'nickname'\n  },\n  {\n    title: '登录账号',\n    dataIndex: 'account'\n  },\n  {\n    title: '状态',\n    scopedSlots: { customRender: 'status' }\n  },\n  {\n    title: '更新时间',\n    scopedSlots: { customRender: 'updated_at' }\n  },\n  {\n    title: '创建时间',\n    scopedSlots: { customRender: 'created_at' }\n  },\n  {\n    title: '操作',\n    scopedSlots: { customRender: 'tools' }\n  }\n]\nexport default {\n  data () {\n    return {\n      description: '',\n      visible: false,\n      confirmLoading: false,\n      pagination: {},\n      rules: [],\n      roles: [],\n      expandedKeys: [],\n      autoExpandParent: true,\n      checkedKeys: [],\n      selectedKeys: [],\n      columns,\n      selecteId: 0,\n      queryParam: {},\n      loadData: parameter => {\n        return fetchAccount(Object.assign(parameter, this.queryParam)).then(res => {\n          res = res.result\n          const { users, roles, rules, depts, posts } = res\n          this.rules = rules\n          this.roles = roles\n          this.depts = depts\n          this.posts = posts\n\n          // 展开组织架构\n          this.expandedDept(depts)\n          return users\n        })\n      },\n      selectedRowKeys: [],\n      selectedRows: []\n    }\n  },\n  components: { STable, UserForm, STree },\n  methods: {\n    refreshTable (bool = false) {\n      this.$refs.table.refresh(bool)\n    },\n    showDeleteConfirm (id) {\n      this.$confirm({\n        title: '确定删除此用户吗?',\n        content: '',\n        okText: '确定',\n        okType: 'danger',\n        cancelText: '取消',\n        onOk: () => {\n          const hide = this.$message.loading('删除中..', 0)\n          deleteAccount(id).then(res => {\n            this.$message.success('删除成功！')\n            this.refreshTable()\n          }).finally(() => {\n            hide()\n          })\n        }\n      })\n    },\n    onSelectChange (selectedRowKeys, selectedRows) {\n      this.selectedRowKeys = selectedRowKeys\n      this.selectedRows = selectedRows\n    },\n    handleMenuClick () { },\n    expandIcon ({ expanded }) {\n      if (expanded === true) {\n        return <a-icon type='down' />\n      }\n      return <a-icon type='right' />\n    },\n    onSelects (selectedKeys) {\n      const { key } = selectedKeys\n      Object.assign(this.queryParam, {\n        deptPid: key\n      })\n      this.refreshTable(true)\n    },\n    expandedDept (depts) {\n      depts.map(dept => {\n        this.expandedKeys.push(dept.value)\n        if (dept.children !== undefined) {\n          this.expandedDept(dept.children)\n        }\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"less\">\n// .company {\n//   display: flex;\n//   align-items: center;\n//   justify-content: space-between;\n//   height: 64px;\n//   padding: 0 24px;\n//   line-height: 64px;\n//   &-title {\n//     flex: 1 1;\n//     color: #000;\n//     font-size: 16px;\n//     line-height: 24px;\n//     opacity: 0.85;\n//   }\n// }\n</style>\n"]}]}