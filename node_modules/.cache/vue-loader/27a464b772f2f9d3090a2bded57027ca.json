{"remainingRequest":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/alone/VueProjects/one-piece-vue/src/views/user/Login.vue?vue&type=style&index=0&id=1ecd471f&lang=less&scoped=true&","dependencies":[{"path":"/Users/alone/VueProjects/one-piece-vue/src/views/user/Login.vue","mtime":1596114086861},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/css-loader/dist/cjs.js","mtime":1596109946494},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1596109940102},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/postcss-loader/src/index.js","mtime":1595423035501},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/less-loader/dist/cjs.js","mtime":1595423111935},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/cache-loader/dist/cjs.js","mtime":1595422850119},{"path":"/Users/alone/VueProjects/one-piece-vue/node_modules/vue-loader/lib/index.js","mtime":1596109940102}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudXNlci1sYXlvdXQtbG9naW4gewogICAgbGFiZWwgewogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIH0KICAgIC5nZXRDYXB0Y2hhIHsKICAgICAgICBkaXNwbGF5OiBibG9jazsKICAgICAgICB3aWR0aDogMTAwJTsKICAgICAgICBoZWlnaHQ6IDQwcHg7CiAgICB9CiAgICAuZm9yZ2UtcGFzc3dvcmQgewogICAgICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIH0KICAgIGJ1dHRvbi5sb2dpbi1idXR0b24gewogICAgICAgIHBhZGRpbmc6IDAgMTVweDsKICAgICAgICBmb250LXNpemU6IDE2cHg7CiAgICAgICAgaGVpZ2h0OiA0MHB4OwogICAgICAgIHdpZHRoOiAxMDAlOwogICAgfQogICAgLnVzZXItbG9naW4tb3RoZXIgewogICAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgICAgbWFyZ2luLXRvcDogMjRweDsKICAgICAgICBsaW5lLWhlaWdodDogMjJweDsKICAgICAgICAuaXRlbS1pY29uIHsKICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4OwogICAgICAgICAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjIpOwogICAgICAgICAgICBtYXJnaW4tbGVmdDogMTZweDsKICAgICAgICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsKICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICB0cmFuc2l0aW9uOiBjb2xvciAwLjNzOwogICAgICAgICAgICAmOmhvdmVyIHsKICAgICAgICAgICAgICAgIGNvbG9yOiAjMTg5MGZmOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIC5yZWdpc3RlciB7CiAgICAgICAgICAgIGZsb2F0OiByaWdodDsKICAgICAgICB9CiAgICB9Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views/user","sourcesContent":["<template>\n    <div class=\"main\">\n        <a-form id=\"formLogin\" class=\"user-layout-login\" ref=\"formLogin\" :form=\"form\" @submit=\"handleSubmit\">\n            <a-tabs :activeKey=\"customActiveKey\" :tabBarStyle=\"{ textAlign: 'center', borderBottom: 'unset' }\">\n                <a-tab-pane key=\"tab1\" tab=\"开始起航\">\n                    <a-alert v-if=\"isLoginError\" type=\"error\" showIcon style=\"margin-bottom: 24px;\" message=\"账户或密码错误\" />\n                    <a-form-item>\n                        <a-input\n                            size=\"large\"\n                            type=\"text\"\n                            placeholder=\"请输入管理员账户\"\n                            v-decorator=\"[\n                                'account',\n                                {rules: [{ required: true, message: '请输入帐户名' }], validateTrigger: 'blur'}\n                            ]\"\n                        >\n                            <a-icon slot=\"prefix\" type=\"user\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n                        </a-input>\n                    </a-form-item>\n\n                    <a-form-item>\n                        <a-input\n                            size=\"large\"\n                            type=\"password\"\n                            autocomplete=\"false\"\n                            placeholder=\"请输入密码\"\n                            v-decorator=\"[\n                                'password',\n                                {rules: [{ required: true, message: '请输入密码' }], validateTrigger: 'blur'}\n                            ]\"\n                        >\n                            <a-icon slot=\"prefix\" type=\"lock\" :style=\"{ color: 'rgba(0,0,0,.25)' }\" />\n                        </a-input>\n                    </a-form-item>\n                </a-tab-pane>\n            </a-tabs>\n\n            <a-form-item style=\"margin-top:24px\">\n                <a-button size=\"large\" type=\"primary\" htmlType=\"submit\" class=\"login-button\" :loading=\"state.loginBtn\" :disabled=\"state.loginBtn\">登录</a-button>\n            </a-form-item>\n        </a-form>\n\n        <two-step-captcha v-if=\"requiredTwoStepCaptcha\" :visible=\"stepCaptchaVisible\" @success=\"stepCaptchaSuccess\" @cancel=\"stepCaptchaCancel\"></two-step-captcha>\n    </div>\n</template>\n\n<script>\nimport { mapActions } from 'vuex'\nimport { timeFix } from '@/utils/util'\n\nexport default {\n    components: {},\n    data() {\n        return {\n            customActiveKey: 'tab1',\n            loginBtn: false,\n            isLoginError: false,\n            requiredTwoStepCaptcha: false,\n            stepCaptchaVisible: false,\n            form: this.$form.createForm(this),\n            state: {\n                time: 60,\n                loginBtn: false,\n                smsSendBtn: false\n            }\n        }\n    },\n    created() {\n\n    },\n    methods: {\n        ...mapActions(['Login', 'Logout']),\n        // handler\n        handleSubmit(e) {\n            e.preventDefault()\n            const {\n                form: { validateFields },\n                state,\n                Login\n            } = this\n\n            state.loginBtn = true\n\n            const validateFieldsKey = ['account', 'password']\n\n            validateFields(validateFieldsKey, { force: true }, (err, values) => {\n                if (!err) {\n                    const loginParams = { ...values }\n\n                    Login(loginParams)\n                        .then(res => this.loginSuccess(res))\n                        .catch(err => this.requestFailed(err))\n                        .finally(() => {\n                            state.loginBtn = false\n                        })\n                } else {\n                    setTimeout(() => {\n                        state.loginBtn = false\n                    }, 600)\n                }\n            })\n        },\n        // 登录成功\n        loginSuccess(res) {\n            this.isLoginError = false\n            this.$router.push({ path: '/' })\n            // 延迟 1 秒显示欢迎信息\n            setTimeout(() => {\n                this.$notification.success({\n                    message: '欢迎',\n                    description: `${timeFix()}，欢迎回来`\n                })\n            }, 1000)\n        },\n        requestFailed() {\n            this.isLoginError = true\n        }\n    }\n}\n</script>\n\n<style lang=\"less\" scoped>\n.user-layout-login {\n    label {\n        font-size: 14px;\n    }\n    .getCaptcha {\n        display: block;\n        width: 100%;\n        height: 40px;\n    }\n    .forge-password {\n        font-size: 14px;\n    }\n    button.login-button {\n        padding: 0 15px;\n        font-size: 16px;\n        height: 40px;\n        width: 100%;\n    }\n    .user-login-other {\n        text-align: left;\n        margin-top: 24px;\n        line-height: 22px;\n        .item-icon {\n            font-size: 24px;\n            color: rgba(0, 0, 0, 0.2);\n            margin-left: 16px;\n            vertical-align: middle;\n            cursor: pointer;\n            transition: color 0.3s;\n            &:hover {\n                color: #1890ff;\n            }\n        }\n        .register {\n            float: right;\n        }\n    }\n}\n</style>\n"]}]}